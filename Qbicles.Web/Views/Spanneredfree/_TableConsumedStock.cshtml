@using Qbicles.Models.Spannered
@using Qbicles.BusinessRules;
@model List<ConsumablesPartServiceItem>
@{ 
    var locationId = (int)ViewBag.LocationId;
    var domainId = (int)ViewBag.CurrentDomainId;
    var currencySettings = (Qbicles.Models.CurrencySetting)ViewBag.CurrencySettings;
}
<table class="datatable table-striped table-hover" id="tblConsumedStock" style="width: 100%;">
    <thead>
        <tr>
            <th data-priority="1">ItemId</th>
            <th data-priority="1">UnitId</th>
            <th data-priority="1">Item</th>
            <th data-priority="1">Unit</th>
            <th data-priority="1">Barcode</th>
            <th data-priority="1">SKU</th>
            <th data-priority="1">Group</th>
            <th data-priority="3" style="width: 90px;">In stock</th>
            <th data-priority="3" style="width: 90px;">Allocated</th>
            <th data-priority="1" style="width: 90px;" data-orderable="false">Used</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var trateItem = item.AssetInventory.Item;
            <tr>
                <td>@trateItem.Id</td>
                <td>@item.AssetInventory.Unit.Id</td>
                <td><a href="#">@trateItem.Name</a></td>
                <td>@item.AssetInventory.Unit.Name</td>
                <td>@trateItem.Barcode</td>
                <td>@trateItem.SKU</td>
                <td>@trateItem.Group.Name</td>
                <td>@trateItem.GetInStockByItem(locationId, item.AssetInventory.Unit).ToDecimalPlace(currencySettings)</td>
                <td>@item.Allocated.ToDecimalPlace(currencySettings)</td>
                <td><input type="number" class="form-control trackInput"></td>
            </tr>
        }
    </tbody>
</table>
