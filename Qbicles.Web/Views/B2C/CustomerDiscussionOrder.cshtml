@using Qbicles.Models.B2C_C2C
@using Qbicles.BusinessRules.Helper
@using Qbicles.Models.TraderApi
@using Qbicles.Models
@using Qbicles.BusinessRules
@using System.Linq;
@using Qbicles.BusinessRules
@using Qbicles.Models.Trader
@using Qbicles.BusinessRules.Helper
@model B2COrderCreation
@{
    //Design - discussion-barter.php
    string currentTimeZone = ViewBag.currentTimeZone;
    var dateFormat = (string)ViewBag.CurrentDateFormat;

    var b2cqbicle = Model.Qbicle as B2CQbicle;
    ViewBag.Title = "Place an order with " + b2cqbicle.Name;
    var currencySettings = (CurrencySetting)ViewBag.currencySetting;
    var api = (string)ViewBag.DocRetrievalUrl;
    var allowUpload = (Model != null && Model.ExpiryDate == null) || (Model.ExpiryDate.HasValue && Model.ExpiryDate.Value > DateTime.UtcNow);
    var currentUserId = (string)ViewBag.CurrentUserId;
    var totalPriceString = (string)ViewBag.TotalPriceStr;

    var pageSize = HelperClass.activitiesPageSize;
    var count_Medias = Model.SubActivities.Count();
    var Comments = Model != null ? Model.Posts.OrderByDescending(x => x.StartedDate).Take(pageSize).ToList() : new List<QbiclePost>();
    var count_Comments = Model != null ? Model.Posts.Count() : 0;

    @* var currencySettings = (Qbicles.Models.CurrencySetting)ViewBag.CurrencySettings; *@
    var paymentMethods = (List<Qbicles.Models.MicroQbicleStream.BaseModel>)ViewBag.PaymentMethods;

    var tradeOrder = Model.TradeOrder.OrderJson != null ? JsonHelper.ParseAs<Order>(Model.TradeOrder.OrderJson) : new Order();
    var vouchers = (List<ContactVoucher>)ViewBag.Vouchers;

    var invoice = Model.TradeOrder.Invoice;
    var isInvoice = false;

    if (Model.TradeOrder.Payments.Any())// invoice != null && (invoice.Status == Qbicles.Models.Trader.TraderInvoiceStatusEnum.InvoiceApproved || invoice.Status == Qbicles.Models.Trader.TraderInvoiceStatusEnum.InvoiceIssued))
    {
        isInvoice = true;
    }

    var shownSearch = "none";

    if (invoice != null && (Model.TradeOrder.IsAgreedByBusiness || Model.TradeOrder.IsAgreedByCustomer))
    {
        shownSearch = "block";
    }
    else if (!Model.TradeOrder.IsAgreedByBusiness || !Model.TradeOrder.IsAgreedByCustomer)
    {
        shownSearch = "block";
    }

    var orderLiActive = "";
    var orderDivActive = "";
    var orderTabShow = "";
    var cartLiActive = "";
    var cartDivActive = "";
    var shownPaymentTab = "display:none";
    if (invoice != null)
    {
        //paymentFull = invoice.TotalInvoiceAmount == invoice.Payments.Sum(e => e.Amount);
        if (invoice.Payments.Any())
        { shownPaymentTab = ""; }
    }
    if (Model.TradeOrder.OrderStatus != TradeOrderStatusEnum.Draft && Model.TradeOrder.OrderStatus != TradeOrderStatusEnum.AwaitingProcessing)
    {
        orderTabShow = "display:none";
        cartLiActive = "active";
        cartDivActive = "in active";
    }
    else
    {
        orderLiActive = "active";
        orderDivActive = "in active";
    }
    var useDefaultWorkgroupSettings = (bool)ViewBag.UseDefaultWorkgroupSettings;
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper qbicle-detail mdv2-wrapper" style="position: relative;">
    <input type="hidden" id="tradeorderid" value="@Model.TradeOrder.Id" />
    <input type="hidden" id="tradeorder-key" value="@Model.TradeOrder.Key" />
    <input type="hidden" id="domainid" value="@b2cqbicle.Business.Id" />
    <input type="hidden" id="domain-key" value="@b2cqbicle.Business.Key" />
    <input type="hidden" id="discussionId" value="@(Model.Id)" />
    <input type="hidden" id="discussionKey" value="@(Model.Key)" />
    <input type="hidden" id="isCustomerDiscussion" value="true" />
    <input type="hidden" id="total-voucher" value="@vouchers.Count" />
    <input type="hidden" id="voucher-seleced-id" value="@tradeOrder.VoucherId" />
    <input type="hidden" id="b2c-payment-total" value="@(Model.TradeOrder?.Sale?.SaleTotal??0)" />
    <!-- Main content -->
    <section class="mdv2 dash" data-tooltip-color="teal" data-tooltip-delay="300" data-tooltip-animate-function="spin" style="border-top: 1px solid #f1f1f1;">


        <!-- Main area -->
        <div class="mdv2-col-dash @(Model.Interaction==OrderDiscussionInteraction.Noninteraction?"":"mdlock")" id="store" style="transition: width 1s ease;">

            <div class="spacing" style="padding-top: 30px;">

                <a id="discuss"></a>

                <div class="welcome-info" style="margin: 0 0 20px 0;">
                    <div class="pull-left" style="margin-bottom: 15px;">
                        <a href="/C2C" class="btn btn-primary"><i class="fa fa-angle-left"></i> &nbsp; Back</a>
                    </div>
                    <div class="clearfix"></div>

                    <div class="activity-overview plain rounded businesscard" style="padding: 15px 0 0 0; margin-bottom: 15px;">

                        <div class="business-logo" style="background-image: url('@ViewBag.BusinessProfileLogo');">&nbsp;</div>

                        <div class="business-info">

                            <div class="row">
                                <div class="col-xs-12">
                                    <div>
                                        <h1 style="margin: 0; padding: 0 0 8px 0;">Order #@Model.TradeOrder.OrderReference.FullRef</h1>
                                        <p style="margin: 0; padding: 0; display: inline;">@(Model.TradeOrder?.ProductMenu?.Name ?? "")</p>
                                        <br /><br />
                                        <label id="b2c-order-status" class="label label-lg label-@Model.TradeOrder.GetClass()">@Model.TradeOrder.GetDescription()</label>

                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="business-options" style="flex: 1;">
                        </div>

                    </div>

                </div>

                <br />

                <div class="app_topnav entity_adds" style="background: #fff; padding: 0; margin-top: 0;">

                    <a id="cart-li-tab-hidden" onclick="showOrderCartB2C()" class="hidden" href="#order-cart-tab" data-toggle="tab"></a>

                    <ul id="b2c-order-tab-menu" class="nav nav-pills app_main_nav">
                        <li id="order-li-tab" role="presentation" class="@orderLiActive" style="@orderTabShow">
                            <a id="order-a-tab" href="#tab0" data-toggle="tab" style="@orderTabShow">
                                <i class="fa fa-file-text"></i>
                                Order
                            </a>
                        </li>
                        <li id="cart-li-tab" role="presentation" class="@cartLiActive">
                            <a href="#order-cart-tab" data-toggle="tab" onclick="showOrderCartB2C()" id="basket" style="position: relative;">
                                <i class="fa fa-shopping-basket"></i>
                                Cart
                                <label class="label label-danger animated bounce" id="item-count" style="font-size: 10px !important; padding: 4px 7px; position: absolute; top: 10px; right: 25px;">@(tradeOrder.Items?.Count ?? 0)</label>
                            </a>
                        </li>
                        <li role="presentation" class="payment-tab" style="@shownPaymentTab">
                            <a href="#tab4" data-toggle="tab" id="payments" class="payment-tab" style="@shownPaymentTab">
                                <i class="fa fa-credit-card"></i>
                                Payments
                            </a>
                        </li>
                        <li role="presentation">
                            <a href="#tab2" data-toggle="tab" id="docs">
                                <i class="fa fa-file-text-o"></i>
                                Documents
                            </a>
                        </li>

                    </ul>
                </div>

                <br /><br />

                <div class="row">
                    <div class="col-xs-12">

                        <div class="tab-content">

                            <!-- Order -->
                            <div class="tab-pane fade @orderDivActive" id="tab0" style="@orderTabShow">

                                <div class="row">
                                    <div class="col-xs-12">

                                        <div class="tab-content">

                                            <div class="tab-pane fade in active" id="tab0">

                                                <div class="well custom" style="padding-bottom: 5px;">
                                                    <div class="row">
                                                        <div class="col-xs-12 col-sm-4 col-lg-3">
                                                            <div class="form-group">
                                                                <label for="search">Search</label>
                                                                <input type="text" class="form-control" id="orer-item-search-text">
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4 col-lg-3">
                                                            <div class="form-group">
                                                                <label for="search">Categories</label>
                                                                <select id="orer-item-search-categories" class="form-control checkmulti" multiple>
                                                                    @foreach (var catItem in Model.TradeOrder.ProductMenu.Categories.Where(e => e.IsVisible).OrderBy(n => n.Name))
                                                                    {
                                                                        <option value="@catItem.Id" selected>@catItem.Name</option>
                                                                    }
                                                                </select>
                                                            </div>
                                                        </div>
                                                        @if (Model.Interaction == OrderDiscussionInteraction.Noninteraction)
                                                        {
                                                            <div class="col-xs-12 col-sm-4">
                                                                <div class="form-group">
                                                                    <label for="options">Options</label><br />
                                                                    <button class="btn btn-info"
                                                                            onclick="activeInteraction(@Model.Id,this)">
                                                                        <i class="fa fa-comment"></i> &nbsp; Talk to an agent
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                                <br />

                                                <div id="items-container" class="flex-grid-thirds-lg gridfix mydeskmarket mdogrid mydeskmarketitems" style="width: 100%; padding: 0;">

                                                </div>
                                                <div id="pagiation-items" style="float: right;"></div>
                                            </div>




                                        </div>


                                    </div>
                                </div>

                            </div>
                            <!-- END Order -->
                            <!-- Cart -->
                            <div class="tab-pane fade @cartDivActive" id="order-cart-tab">
                            </div>
                            <!-- END Cart -->
                            <!-- Payments -->
                            <div class="tab-pane fade payment-tab" id="tab4">

                                @{
                                    decimal payTotal = 0;
                                    if (Model.TradeOrder?.Payments != null)
                                    {
                                        payTotal = Model.TradeOrder.Payments.Sum(e => e.Amount);
                                    }
                                }

                                <input hidden id="payment-total" value="@payTotal" />

                                @*<div class="well custom" style="padding-bottom: 5px;">
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-5">
                                                <div class="form-group search_dt_payment" style="display:@shownSearch">
                                                    <label for="search_dt">Search for something</label>
                                                    <input type="text" name="search_dt_payment" id="search_dt_payment" class="form-control" placeholder="Search for something">
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-7">
                                                <label>Options</label>
                                                <br />
                                                <div class="btn-group options">
                                                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="fa fa-sliders"></i> &nbsp; Manage display
                                                    </button>
                                                    <ul id="manage-columns-payment" class="dropdown-menu primary manage-columns">
                                                        <li><label><input type="checkbox" data-column="1" checked> Reference</label></li>
                                                        <li><label><input type="checkbox" data-column="2" checked> Information</label></li>
                                                        <li><label><input type="checkbox" data-column="3" checked> Payment method</label></li>
                                                        <li><label><input type="checkbox" data-column="4" checked> Date</label></li>
                                                        <li><label><input type="checkbox" data-column="5" checked> Amount</label></li>
                                                        <li><label><input type="checkbox" data-column="6" checked> Bank</label></li>
                                                        <li><label><input type="checkbox" data-column="7" checked> Status</label></li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="visible-xs" style="width: 100%; height: 15px;">&nbsp;</div>

                                    </div>

                                    <br />*@
                                <br />

                                <table class="datatable table-hover table-striped" width="100%" cellspacing="0" id="community-list_payment" data-searching="false" data-order='[[0, "desc"]]'>
                                    <thead>
                                        <tr>
                                            <th data-priority="1">#</th>
                                            <th data-priority="1">Reference</th>
                                            <th data-priority="1">Information</th>
                                            <th data-priority="1">Payment method</th>
                                            <th data-priority="1">Date</th>
                                            <th data-priority="1">Amount <strong>(@currencySettings.CurrencySymbol)</strong></th>
                                            <th data-priority="1">Bank</th>
                                            <th data-priority="1">Status</th>
                                            <th data-priority="1" class="nosort" data-orderable="false">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (isInvoice)
                                        {
                                            foreach (var p in Model.TradeOrder.Payments)
                                            {
                                                var bank = "";
                                                var status = "";
                                                var appCss = "primary";
                                                var info = "";
                                                if (p.AssociatedInvoice.Sale != null)
                                                {
                                                    bank = p.DestinationAccount?.Name;
                                                    info = "Sale";
                                                }
                                                else if (p.AssociatedInvoice.Purchase != null)
                                                {
                                                    bank = p.OriginatingAccount?.Name;
                                                    info = "Purchase";
                                                }
                                                else if (p.AssociatedInvoice != null)
                                                {
                                                    info = "Invoice";
                                                }
                                                switch (p.Status)
                                                {
                                                    case TraderPaymentStatusEnum.Draft:
                                                        status = "Draft";
                                                        appCss = "label-info";
                                                        break;
                                                    case TraderPaymentStatusEnum.PendingReview:
                                                        status = "Pending Review";
                                                        appCss = "label-warning";
                                                        break;
                                                    case TraderPaymentStatusEnum.PendingApproval:
                                                        status = "Pending Approval";
                                                        appCss = "label-primary";
                                                        break;
                                                    case TraderPaymentStatusEnum.PaymentDenied:
                                                        status = "Denied";
                                                        appCss = "label-danger";
                                                        break;
                                                    case TraderPaymentStatusEnum.PaymentApproved:
                                                        status = "Paid";
                                                        appCss = "label-success";
                                                        break;
                                                    case TraderPaymentStatusEnum.PaymentDiscarded:
                                                        status = "Discarded";
                                                        appCss = "label-danger";
                                                        break;
                                                }
                                                <tr>
                                                    <td>@p.Id.ToString("D6")</td>
                                                    <td>@p.Reference</td>
                                                    <td>@info</td>
                                                    <td>
                                                        @{
                                                            var method = p.PaymentMethod?.Name ?? "";
                                                        }
                                                        @method
                                                    </td>
                                                    <td>@p.CreatedDate.ConvertTimeFromUtc(currentTimeZone).ToString(dateFormat)</td>
                                                    <td>@p.Amount.ToDecimalPlace(currencySettings)</td>
                                                    <td>@bank</td>
                                                    <td><span class="label label-lg @appCss">@status</span></td>
                                                    @if (p.Status == TraderPaymentStatusEnum.Draft)
                                                    {
                                                        <td>
                                                            <button class="btn btn-info" onclick="EditInvoicePayment(@p.Id)"><i class="fa fa-pencil"></i> &nbsp; Continue</button>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            <button class="btn btn-primary" onclick="window.location.href = '/TraderPayments/PaymentManage?id=@p.Id';"><i class="fa fa-eye"></i> &nbsp; Manage</button>
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                        }


                                    </tbody>
                                </table>
                            </div>
                            <!-- END Payments -->
                            <!-- Documents -->
                            <div class="tab-pane fade" id="tab2">

                                @if (allowUpload)
                                {
                                    <a href="#" class="btn btn-success" data-toggle="modal" data-target="#create-media"><i class="fa fa-upload"></i> &nbsp; Upload a file</a>
                                }
                                <br><br><br>


                                <!-- Media post -->

                                <div id="list-medias">
                                    @if (count_Medias > 0)
                                    {
                                        foreach (var item in Model.SubActivities.OrderByDescending(x => x.Id).Take(pageSize))
                                        {
                                            var med = (QbicleMedia)item;
                                            var createdByName = med.StartedBy.Id == currentUserId ? "Me" : HelperClass.GetFullNameOfUser(med.StartedBy);
                                            var createdDate = med.StartedDate.Date == DateTime.Now.Date ? "Today, " + med.StartedDate.ToString("hh:mmtt") : med.StartedDate.ToString(dateFormat + " hh:mmtt");
                                            var lastUpdateFile = "";
                                            var mediaLastupdate = med.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault() ?? null;
                                            if (mediaLastupdate != null)
                                            {
                                                lastUpdateFile = mediaLastupdate?.UploadedDate.Date == DateTime.Now.Date ? "Today, " + mediaLastupdate.UploadedDate.ToString("hh:mmtt") : mediaLastupdate.UploadedDate.ToString(dateFormat + " hh:mmtt");
                                            } //Media post
                                            <!-- Media post -->
                                            <article class="activity media">
                                                <div class="activity-avatar" style="background-image: url('@api@(med.StartedBy.ProfilePic)&size=T');"></div>
                                                <div class="activity-detail" style="width: 100%; max-width: 100%;">
                                                    <div class="activity-meta">
                                                        <h4>@createdByName</h4>
                                                        <small>@createdDate</small>
                                                        <br class="visible-xs">
                                                    </div>

                                                    <div class="activity-overview media">
                                                        <div class="row">
                                                            <div class="col-xs-12 col-sm-5 col-lg-4">
                                                                <a href="@api@(mediaLastupdate.Uri)" target="_blank">
                                                                    @if (med.FileType.Type == "Image File")
                                                                    {
                                                                        <img id="media-@item.Id" class="img-responsive" src='@api@(mediaLastupdate.Uri)&size=M' />
                                                                    }
                                                                    else
                                                                    {
                                                                        <img src="@med.FileType.ImgPath" class="img-responsive">
                                                                    }
                                                                </a>
                                                            </div>
                                                            <div class="col-xs-12 col-sm-7 col-lg-8 description" style="padding-top: 0;">
                                                                <h5>@med.Name</h5>
                                                                <p>
                                                                    @med.Description
                                                                </p>
                                                                <small>@Utility.GetFileTypeDescription(med.FileType.Extension) | Update @lastUpdateFile</small>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clearfix"></div>
                                            </article>
                                            <!-- END Media post -->
                                        }
                                    }
                                    @if (count_Medias > pageSize)
                                    {
                                        <button id="btnLoadMedias" onclick="LoadMoreMediasDiscussion(@Model.Id, @pageSize, 'list-medias')" class="btn btn-info">Load older medias</button>
                                    }
                                </div>
                                <!-- END Media post -->

                            </div>
                            <!-- END Documents -->
                        </div>
                    </div>

                </div>

            </div>

        </div>


        <div class="mdv2-col-user mdfix animated slideInRight" id="talktoagent" style="@(Model.Interaction==OrderDiscussionInteraction.Noninteraction?"display: none;":"")">

            @if (allowUpload)
            {
                <div class="form-group">
                    @Html.Partial("_ChatPartial", new ViewDataDictionary { { "qbicleTopics", null }, { "chatType", ChatType.Order }, { "OrderCreation", @Model }, { "OrderChatTo", OrderChatTo.Business } })
                </div>
            }

            <br /><br />
            <div class="scroller-tall">

                <div id="list-comments-discussion" discussionType="orderdiscussion-customer" class="column-comments">
                    @if (Comments != null && count_Comments > 0)
                    {
                        var createdByImg = "";
                        foreach (var item in Comments)
                        {
                            var createdBy = item.GetCommentAvatar(ref createdByImg, currentUserId);
                            <div class="activity-overview post-mini animated fadeInUp newpost">
                                <p>@Html.Raw(item.Message.Replace(Environment.NewLine, "<br/>"))</p>

                                <a href="#">
                                    <div class="activity-avatar" style="background-image: url('@createdByImg');"></div>
                                    <h5>@createdBy, @item.StartedDate.GetTimeRelative()</h5>
                                </a>
                            </div>
                        }
                    }
                </div>
                @if (count_Comments > pageSize)
                {
                    <button id="btnLoadPosts" onclick="LoadMorePostsDiscussionOrder('@Model.Key', @pageSize, 'list-comments-discussion')" class="btn btn-info">Load older posts</button>
                }


            </div>

        </div>


    </section>
    <!-- ./content -->

</div>
<!-- /.content-wrapper -->
<!--Modals-->
<div class="modal fade left" id="b2c-payment-add" role="dialog" aria-labelledby="b2c-payment-add">
    <div class="modal-dialog" role="document">
        <div class="modal-content b2c-payment-add">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title">Add a payment to this order</h5>
            </div>
            <div class="modal-body">

                <div class="well custom" style="padding-bottom: 5px;">
                    <div class="form-group">
                        <label for="method">Payment method</label>
                        <select name="method" class="form-control select2" style="width: 100%;" id="pay-method" onchange="MethodChange()">
                            @foreach (var method in paymentMethods)
                            {
                                <option value="@method.Name">@method.Name</option>
                            }
                        </select>
                    </div>

                    <div class="row">
                        <div class="col-xs-5">
                            <div class="form-group">
                                <label for="method1">Amount to pay</label><br />
                                <div class="input-group">
                                    <span class="input-group-addon">@currencySettings.CurrencySymbol</span>
                                    <input id="pay-amount" type="number" class="form-control" min="0" value="0" onblur="ValidPaymentAmount()">
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 pay-card" id="pay-card">
                            <div class="form-group">
                                <label for="ref">Reference (optional)</label><br />
                                <input id="pay-reference" type="text" class="form-control">
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="b2c-order-invoice-id" value="@(invoice?.Key??"")" />
                <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button id="confirm-payment" type="button" onclick="ShowPaystackPaymentPopup('@Model.TradeOrder.Key')" class="btn btn-success">Confirm</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<div class="modal fade left" id="item-content-modal" role="dialog" aria-labelledby="product-more-menu" style="display: none; padding-right: 17px;"></div>
@{
    Html.RenderAction("GenerateModalMedia", "Qbicles");
}
<div class="modal fade left" id="user-address-add" role="dialog" aria-labelledby="user-address-add">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title">Add an Address</h5>
            </div>
            <div class="modal-body">
                <form id="frmuseraddressadd" method="post" action="~/C2C/SaveAddressForCustomer" novalidate>
                    <div class="well custom" style="padding-bottom: 5px;">

                        <div class="row">
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="AddressLine1">Address line 1</label>
                                    <input required type="text" name="AddressLine1" class="form-control">
                                </div>
                            </div>
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="AddressLine2">Address line 2</label>
                                    <input type="text" name="AddressLine2" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="City">City</label>
                                    <input required type="text" name="City" class="form-control">
                                </div>
                            </div>
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="State">State</label>
                                    <input required type="text" name="State" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            @{
                                var countries = new CountriesRules().GetAllCountries();
                            }
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="country">Country</label>
                                    <select required name="country" class="form-control select2" onchange="$(this).valid()" style="width: 100%;">
                                        <option value=""></option>
                                        @foreach (var c in countries)
                                        {
                                            <option value="@c.CommonName" @(c.CommonName == "Nigeria" ? "selected" : "")>@c.CommonName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="PostCode">Postcode</label>
                                    <input type="text" name="PostCode" class="form-control">
                                </div>
                            </div>
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="postcode">Set as my default address</label>
                                    <div class="checkbox toggle">
                                        <label>
                                            <input data-toggle="toggle" value="True" name="IsDefault" data-onstyle="success" type="checkbox">
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Confirm</button>
                </form>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!--/END Modals-->
<div class="modal fade left" id="apply-voucher" role="dialog" aria-labelledby="apply-voucher">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title">Vouchers you can use in this order</h5>
            </div>
            <div class="modal-body">

                <ul class="unstyled voucherlist" style="padding-top: 10px; margin-bottom: 30px;">
                    @foreach (var voucher in vouchers)
                    {
                        <li>
                            <a href="#" class="date-schedule" style="margin: 0; padding: 0;" data-toggle="modal" data-target="#voucher-order-more">
                                <div class="mdv2-activity" style="padding-top: 25px; margin: 0 0 5px 0;">
                                    <h2 style="margin: 0; padding: 0 0 5px 0;">@voucher.Name</h2>
                                    <p style="margin-bottom: 10px;">Expires on @voucher.EndDateString</p>
                                    <button class="btn btn-success" data-dismiss="modal" onclick="SelectedVoucher(@voucher.Id, '@voucher.Name', '@voucher.Code')">Apply</button>
                                </div>
                            </a>
                        </li>
                    }
                </ul>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<div class="modal fade" id="customer-order-processing-modal" role="dialog" aria-labelledby="order-processing-modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="background: transparent; box-shadow: none;">
            <div class="modal-body">

                <div class="alert alert-qb text-center animated fadeIn" style="padding: 50px !important; margin: 0 auto;">
                    <img src="~/Content/DesignStyle/img/b2b-order-alt.png" style="width: 300px; height: auto; margin-bottom: 30px;">
                    <h4 style="margin-bottom: 20px;">Your order is being processed</h4>
                    <p style="max-width: 80%; margin: 0 auto !important;">
                        @b2cqbicle.Business.Name have received your order. You'll be prompted to return and make payment once your order has been
                        confirmed. If there are any issues with your order you will be contacted by a sales representative shortly.
                    </p>

                    <br /><br />
                    <button class="btn btn-success community-button" data-dismiss="modal">OK</button>
                </div>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<link href="~/Content/DesignStyle/css/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/DesignStyle/js/bootstrap-multiselect.min.js"></script>
@if (System.Diagnostics.Debugger.IsAttached)
{
    <script src="~/Scripts/dev/b2c.discussionorder.js"></script>
    <script src="~/Scripts/dev/qbicle.discussion-qb.js"></script>
}
else
{
    <script src="~/Scripts/dev/b2c.discussionorder.js"></script>
    <script src="~/Scripts/dev/qbicle.discussion-qb.min.js"></script>
}
<script src="https://js.paystack.co/v1/inline.js"></script>
<script>
    $('#search_dt_payment').keyup(function () {
        $('#community-list_payment').DataTable().search($(this).val()).draw();
    });
    initCustomerDiscussionPage();
</script>
