@using Qbicles.Models.B2B
@using Qbicles.BusinessRules
@model List<PriceList>
@{
    var api = (string)ViewBag.DocRetrievalUrl;
    var count = Model.Count;
    var extraCol = (Model.Count() % 4 == 0 ? 0 : 4) - count % 4;
}
@if (count > 0)
{
    foreach (var item in Model)
    {
        <article class="col">
            <div class="btn-group optsnew defaulted dropdown">
                <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu dropdown-menu-right">
                    <li><a href="#" onclick="loadModalPriceList(@item.Id)">Edit</a></li>
                    <li><a href="#" onclick="initPriceCloneCurrentLocation(@item.Id,'@(Utility.FixQuoteCode(item.Name))')">Clone</a></li>
                    <li><a href="#" onclick="loadModalLocationChange(@item.Id)">Apply to another location</a></li>
                    <li><a href="#" onclick="deletePriceList(@item.Id)">Delete</a></li>
                </ul>
            </div>
            <a href="#" onclick="loadContentChargeFramework(@item.Id)">
                <input type="hidden" id="location_item_@item.Id" value="@item.Location.Id"/>
                <div class="avatar" style="background-image: url('@(api+item.Icon)&size=T');">&nbsp;</div>
                <h1 style="color: #333;">@item.Name</h1>
            </a>

            <p class="qbicle-detail">
                @item.Summary
            </p>
        </article>
    }
}
@for (int i = 1; i <= extraCol; i++)
{
    <article class="col" style="background: transparent; box-shadow: none;"></article>
}