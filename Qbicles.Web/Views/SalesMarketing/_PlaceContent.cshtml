@using Qbicles.Models.SalesMkt;
@model List<Place>
@{
    var api = (string)ViewBag.DocRetrievalUrl;
    var extraCol = (Model.Count() % 4 == 0 ? 0 : 4) - Model.Count() % 4;
}
@if (Model != null)
{
    foreach (Place place in Model)
    {
            <div class="col article-feature @(place.IsHidden?"place-hidden":"")">
                <a href="/SalesMarketingLocation/PlaceDetail?placeId=@place.Id">
                  <div class="article-feature-img" style="background: url(@(api + place.FeaturedImageUri + "&size=M"));"></div>
                </a>
                <div class="info">
                    <div class="btn-group optsnew defaulted dropdown">
                        <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <i class="fa fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right">
                            <li><a href="#" onclick="LoadModalPlace(@place.Id)" data-toggle="modal" data-target="#app-marketing-place-add">Edit</a></li>
                            <li><a href="javascript:void(0)" onclick="ShowOrHidePlace(@place.Id)">@(place.IsHidden?"Show":"Hide")</a></li>
                        </ul>
                    </div>
                    <a href="/SalesMarketingLocation/PlaceDetail?placeId=@place.Id">
                        <smaller>@(place.Areas.FirstOrDefault()?.Name), @(String.Format("{0:n0}", place.Prospects)) prospects</smaller>
                        <smaller></smaller>
                        <h1>@place.Name</h1>
                        <p>@(place.Summary != null && place.Summary.Count() > 160 ? place.Summary.Substring(0, 160) + "..." : place.Summary)</p>
                    </a>
                </div>
            </div>
    }
    for (int i = 1; i <= extraCol; i++)
    {
        <div class="col">&nbsp;</div>
    }
}