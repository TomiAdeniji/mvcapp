@using Qbicles.Models.Loyalty
@using Qbicles.Models.Trader
@using Qbicles.BusinessRules
@using Qbicles.Models
@model Voucher
@{
    var api = (string)ViewBag.DocRetrievalUrl;
    var timezone = (string)ViewBag.CurrentTimeZone;
    var dateformat = (string)ViewBag.CurrentDateFormat;
    var promotion = Model.Promotion;
    var business = promotion?.Domain.Id.BusinesProfile() ?? null;
    var currencySettings = (CurrencySetting)ViewBag.CurrencySettings;
    var currentDate = DateTime.UtcNow;
}
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h5 class="modal-title">About your voucher</h5>
        </div>
        <div class="modal-body">

            <div class="flex-grid-fluid newdeals from-community c1" style="width: 100%;">

                <div class="col" style="margin: 0;">

                    <div class="deal-promo">

                        <div class="deal-promo-img" style="background-image: url('@(api+promotion?.FeaturedImageUri??"")'); height: 260px;">&nbsp;</div>

                        <div class="timer">
                            <label class="label label-xl label-soft text-left" style="display: block;">
                                @if (!Model.IsRedeemed && Model.Promotion.EndDate < currentDate)
                                {
                                    <span class="voucher-status expired">Expired</span>
                                }
                                else if (Model.IsRedeemed)
                                {
                                    <span class="voucher-status redeemed">Redeemed</span>
                                }else
                                {
                                    <span class="label label-lg label-success">Valid</span>
                                }
                                 &nbsp; @Html.Raw(promotion.CalRemainPromotionInfo(timezone, dateformat, currentDate))
                            </label>
                        </div>

                        <br />

                        <div class="specifics">
                            <h1>@(promotion?.Name ?? "")</h1>
                            <smaller class="voucherdata">@(Model.Code) | @(business?.BusinessName)</smaller>
                            <br />

                            <p class="text-detail">@(promotion?.VoucherInfo.TermsAndConditions)</p>

                            <br>
                            <table class="table table-borderless table-striped voucherinfo">
                                <tr>
                                    <td>Expires</td>
                                    @{var endate = promotion.EndDate.ConvertTimeFromUtc(timezone);}
                                    <td>@(endate.DatetimeToOrdinal() + endate.ToString(" hh:mmtt").ToLower())</td>
                                </tr>
                                @if (promotion != null && promotion.VoucherInfo.Type == VoucherType.ItemDiscount)
                                {
                                    var itemVoucher = promotion.VoucherInfo as ItemDiscountVoucherInfo;
                                    var item = (TraderItem)ViewBag.Item;
                                    <tr>
                                        <td>Qualifying item</td>
                                        <td>@(item?.Name)<br />@(item?.SKU)</td>
                                    </tr>
                                    <tr>
                                        <td>Discount</td>
                                        <td>@(itemVoucher.ItemDiscount.ToDecimalPlace(currencySettings))% @(itemVoucher.MaxNumberOfItemsPerOrder != ItemDiscountVoucherInfo.NO_MAX_ITEMS_PER_ORDER ? $"(max #{itemVoucher.MaxNumberOfItemsPerOrder} per order)" : "")</td>
                                    </tr>
                                }
                                @if (promotion != null && promotion.VoucherInfo.Type == VoucherType.OrderDiscount)
                                {
                                    var orderVoucher = promotion.VoucherInfo as OrderDiscountVoucherInfo;
                                    <tr>
                                        <td>Discount order total</td>
                                        <td>@(orderVoucher.OrderDiscount.ToDecimalPlace(currencySettings))% @(orderVoucher.MaxDiscountValue != OrderDiscountVoucherInfo.NO_MAX_DISCOUNT_VALUE ? $"(max {orderVoucher.MaxDiscountValue.ToCurrencySymbol(currencySettings)} per order)" : "")</td>
                                    </tr>
                                }

                                <tr>
                                    <td>Available at</td>
                                    <td>
                                        <ul>
                                            @if (promotion != null)
                                            {
                                                foreach (var item in promotion.VoucherInfo.Locations)
                                                {
                                                    <li>@item.Name</li>
                                                }
                                            }
                                        </ul>
                                    </td>
                                </tr>
                                @if (promotion != null && promotion.VoucherInfo.DaysAllowed.Any())
                                {
                                    DateTime starttime = DateTime.Today.Add(promotion.VoucherInfo.StartTime);
                                    DateTime endtime = DateTime.Today.Add(promotion.VoucherInfo.EndTime);
                                    <tr>
                                        <td>Specific days &amp; times</td>
                                        <td>
                                            <ul>
                                                @foreach (var item in promotion.VoucherInfo.DaysAllowed)
                                                {
                                                <li>@item.Day.Substring(0,3) @($"{starttime.ToString("hh:mmtt").ToLower()} - {endtime.ToString("hh:mmtt").ToLower()}")</li>
                                                }
                                            </ul>
                                        </td>
                                    </tr>
                                    
                                }

                            </table>

                            <br />
                            <a href="/C2C/TalkBusiness?businessKey=@(business.Domain.Key)" class="btn btn-primary community-button">Talk to @business.BusinessName</a>
                        </div>
                    </div>
                </div>


            </div>


        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
