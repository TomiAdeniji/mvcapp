@using Qbicles.Models.Trader.ODS
@model List<PrepDisplayDevice>
@{
    
}

@foreach (var q in Model)
{
    <article id="pds-item-@q.Id" class="col">
        <span class="last-updated"><span id='pds-queue-name-main-@q.Id'>@q.Queue.Name</span></span>
        <span style="top: 40px !important;" class="last-updated"><span id='pds-type-main-@q.Id'>@(q.Type?.Name ?? "Device type is empty")</span></span>
        <div class="qbicle-opts">
            <div class="dropdown">
                <a href='javascript:' class="dropdown-toggle" data-toggle="dropdown">
                    <i class="fa fa-cog"></i>
                </a>

                <ul class="dropdown-menu dropdown-menu-right primary">
                    <li>
                        <a href='javascript:' onclick="PrepDisplayDeviceAddEdit(@q.Id)">Edit</a>
                    </li>
                    <li>
                        <a href='javascript:' onclick='ConfirmDeletePrepDisplayDevice(@q.Id)'>Delete</a>
                    </li>
                </ul>
            </div>

        </div>
        <a href='javascript:' style="cursor: initial !important;">
            <div class="avatar" style="border-radius: 0; background-image: url('/Content/DesignStyle/img/icon_order.png');">&nbsp;</div>
            <h1 style="color: #333;"><span id='pds-name-main-@q.Id'>@q.Name</span></h1>
        </a>
        <br />
        <p class="qbicle-detail">
            <label style="color: #333;">Administrators</label><br />
            <span id='pds-admins-name-main-@q.Id'>@(string.Join(",", q.Administrators.Select(e => e.DisplayUserName)))</span>
        </p>
    </article>
}