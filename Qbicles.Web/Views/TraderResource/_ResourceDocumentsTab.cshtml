@using Qbicles.Models.Trader.Resources
@{
    var categoryResources = (List<ResourceCategory>)ViewBag.ResourceCategorys;
}
    <div class="well custom" style="padding-bottom: 5px;">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-lg-4">
                <div class="form-group">
                    <label for="search">Search documents</label>
                    <input type="text" name="search" id="key_search_document" onkeyup="searchOnDataDocuments()" class="form-control" placeholder="Search for...">
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-lg-3">
                <div class="form-group">
                    <label for="search">Filter by Category</label>
                    <select name="category" id="cagegory_search_document" onchange="searchOnDataDocuments()" class="form-control select2" style="width: 100%;">
                        <option value="" selected="">Show all</option>
                        @foreach (var item in categoryResources)
                        {
                            <option value="@item.Name">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-lg-5">
                <label>Options</label><br />
                <button class="btn btn-success" onclick="addEditDocument(0)" data-toggle="modal" data-target="#app-trader-resource-document-add"><i class="fa fa-plus"></i> &nbsp; Add new</button>
            </div>
        </div>
    </div>


<br />
<div id="resource_document_data"></div>



<div class="modal fade left" id="app-trader-resource-document-add" role="dialog" aria-labelledby="app-trader-resource-document-add">
    
</div><!-- /.modal -->
<script>
   
    $('#cagegory_search_document').select2();

    var $tableResourceDocument;
    $(document).ready(function () {
        getDataDocuments();

        $tableResourceDocument = $('#resource_document_datatable').DataTable();

        // Override default search function
        $.fn.dataTable.ext.search.push(function (settings, searchData, index, rowData, counter) {
            if (settings.nTable.id !== 'resource_document_datatable') {
                // Return true to include row in other DataTable instances
                return true;
            }

                var searchKey = $('#key_search_document').val().toLowerCase();
                var searchCagegory = $('#cagegory_search_document').val().toLowerCase();

                var colName = searchData[0].toLowerCase();
                var colCategory = searchData[1].toLowerCase();
                var colType = searchData[2].toLowerCase();
                var colDescription = searchData[3].toLowerCase();

                // Apply filtering conditions with AND operator
                var matchName = colName.includes(searchKey);
                var matchCategory = colCategory.includes(searchCagegory);
                var matchType = colType.includes(searchKey);
                var matchDescription = colDescription.includes(searchKey);

                return (matchName || matchType || matchDescription) && matchCategory;
            }
        );
    });

    function searchOnDataDocuments() {
        $tableResourceDocument = $('#resource_document_datatable').DataTable();
        $tableResourceDocument.draw();        
    }

</script>



