@using System.Diagnostics
@using Qbicles.BusinessRules
@using Qbicles.Models
@using Qbicles.Models.Trader.Returns
@model TraderReturn
@{
    ViewBag.Title = "Trader & Approvals Sales Return #" + Model.Reference?.FullRef;
    var api = (string)ViewBag.DocRetrievalUrl;
    var pageSize = HelperClass.activitiesPageSize;
    var timeZone = (string)ViewBag.CurrentTimeZone ?? "";
    var dateFormat = ViewBag.CurrentDateFormat;
    var timeFormat = ViewBag.CurrentTimeFormat;
    var userId = ViewBag.CurrentUserId;



    var userRight = "none";
    var traderAppRight = (IsReviewerAndApproverModel)ViewBag.TraderApprovalRight;

    //o1
    if (!traderAppRight.IsInitiators && !traderAppRight.IsReviewer && !traderAppRight.IsApprover)
    { userRight = "none"; }//hiden approval, no edit
                           //o2
    else if (traderAppRight.IsInitiators && !traderAppRight.IsReviewer && !traderAppRight.IsApprover)
    { userRight = "initiator"; } // readonly approval, no edit
                                 //o3
    else if (traderAppRight.IsReviewer && Model.ReturnApprovalProcess.RequestStatus == ApprovalReq.RequestStatusEnum.Pending)
    {
        userRight = "reviewer";
    }//If the user is an ApprovalReq.ApprovalRequestDefinition.Reviewer and the Status of the ApprovalReq is Pending, the drop down displays the items Discard, or Send to Approval.
     //o4
    else if (traderAppRight.IsApprover && Model.ReturnApprovalProcess.RequestStatus == ApprovalReq.RequestStatusEnum.Reviewed)
    {
        userRight = "approver";
    }
    //o4.1
    else if (traderAppRight.IsApprover && Model.ReturnApprovalProcess.RequestStatus == ApprovalReq.RequestStatusEnum.Pending)
    {
        userRight = "initiator";
    }
    //o5
    else if (Model.ReturnApprovalProcess.RequestStatus == ApprovalReq.RequestStatusEnum.Approved
             || Model.ReturnApprovalProcess.RequestStatus == ApprovalReq.RequestStatusEnum.Denied
             || Model.ReturnApprovalProcess.RequestStatus == ApprovalReq.RequestStatusEnum.Discarded)
    {
        userRight = "completed";
    }

    var confirm = "";
    var isChange = "";
    if (userRight == "initiator" || userRight == "completed")
    {
        isChange = "disabled";
        confirm = "hidden";
    }

    if (userRight == "none")
    {
        isChange = "disabled";
        confirm = "hidden";
    }



    var today = (DateTime)ViewBag.Today;
    var timeline = (List<ApprovalStatusTimeline>)ViewBag.Timeline;
    var timelineDate = (List<DateTime>)ViewBag.TimelineDate;
    var domainId = (int)ViewBag.CurrentDomainId;
    var currencySettings = (Qbicles.Models.CurrencySetting)ViewBag.CurrencySettings;
}

<div id="sale-return-review-content">
    <input type="hidden" value="@Model.Id" id="sale-return-id" />
    <input type="hidden" id="action_approval_default" value="@Model.ReturnApprovalProcess.RequestStatus" />
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper qbicle-detail mdv2-wrapper" style="position: relative;">


        <!-- Main content -->
        <section class="mdv2 dash" data-tooltip-color="teal" data-tooltip-delay="300" data-tooltip-animate-function="spin" style="border-top: 1px solid #f1f1f1;">


            <!-- App bar -->
            <div class="mdv2-col-app" style="margin-bottom: 0;">

                <div data-spy="affix" class="contained-sidebar">

                    <div class="activity-overview plain company-overview welcome-info" style="text-align: left !important; flex: none; margin: 0 0 30px 0; padding-top: 30px; padding-bottom: 0;">

                        <div class="pull-left" style="margin-bottom: 15px;">
                            <a onclick="QbicleSelected('@Model.Workgroup.Qbicle.Key','Dashboard')" class="btn btn-primary"><i class="fa fa-angle-up"></i> &nbsp; Qbicle</a>
                            <a href="/TraderSalesReturn/SaleReturnMaster?id=@Model.Id" class="btn btn-info"><i class="fa fa-eye"></i> &nbsp; View in Trader</a>
                        </div>
                        <div class="clearfix"></div>

                        <br />

                        <h1 style="line-height: 1.2;">Sales Return #@(Model.Reference?.FullRef)</h1>
                        @{
                            var cssTrader = "";
                            switch (Model.Status)
                            {
                                case TraderReturnStatusEnum.Draft:
                                    cssTrader = StatusLabelStyle.Draft;
                                    break;
                                case TraderReturnStatusEnum.PendingReview:
                                    cssTrader = StatusLabelStyle.Pending;
                                    break;
                                case TraderReturnStatusEnum.PendingApproval:
                                    cssTrader = StatusLabelStyle.Reviewed;
                                    break;
                                case TraderReturnStatusEnum.Reviewed:
                                    cssTrader = StatusLabelStyle.Reviewed;
                                    break;
                                case TraderReturnStatusEnum.Denied:
                                    cssTrader = StatusLabelStyle.Denied;
                                    break;
                                case TraderReturnStatusEnum.Approved:
                                    cssTrader = StatusLabelStyle.Approved;
                                    break;
                                case TraderReturnStatusEnum.Discarded:
                                    cssTrader = StatusLabelStyle.Discarded;
                                    break;
                            }
                        }
                        <span class="label label-lg @cssTrader">@(Model.Status.GetDescription() ?? "Approved")</span>
                        <div class="clearfix"></div>


                        <br /><br /><br />
                        <div class="row">
                            <div class="col-xs-12 col-sm-6">
                                <label>Created</label><br />
                                <p>@Model.CreatedDate.ConvertTimeFromUtc(timeZone).ToString(dateFormat + " " + timeFormat)</p>
                            </div>
                            <div class="col-xs-12 col-sm-6">
                                <label>Creator</label><br />
                                <p><a href="/Community/UserProfilePage?uId=@(Model.CreatedBy.Id)">@HelperClass.GetFullNameOfUser(Model.CreatedBy)</a></p>
                            </div>
                        </div>


                        <br /><br />
                        <div class="row">
                            <div class="col-xs-12 col-sm-6">
                                <button class="btn btn-primary community-button" style="margin-bottom: 3px;" data-toggle="modal" data-target="#team-view">
                                    <i class="fa fa-users"></i> &nbsp; Team
                                </button>
                            </div>
                            <div class="col-xs-12 col-sm-6">
                                <button class="btn btn-info community-button" data-toggle="modal" data-target="#history-view"><i class="fa fa-history"></i> &nbsp; History</button>
                            </div>
                        </div>


                        <br /><br />
                        @{
                            var saleOrder = Model.Sale.SalesOrders.FirstOrDefault();
                            if (saleOrder != null)
                            {

                                <h5>Attachments</h5>
                                <ul class="avatar-listing team unstyled" style="margin-bottom: 30px !important;">
                                    <li>
                                        <a href="/TraderSales/SaleOrder?id=@saleOrder.Id">
                                            <div class="owner-avatar">
                                                <div class="avatar-sm" style="background: url('/Content/DesignStyle/img/icon_file_pdf.png');"></div>
                                            </div>
                                            <h5>Sales Order<br><small>@(saleOrder.Reference?.FullRef)</small></h5>
                                        </a>
                                    </li>
                                </ul>
                            }
                        }



                    </div>


                </div>
            </div>
            <!-- END App bar -->
            <!-- Main area -->
            <div class="mdv2-col-dash">

                <div class="spacing">
                    @{
                        if (confirm == "" && Model.ReturnApprovalProcess != null)
                        {
                            <div style="width: 500px; max-width: 100%; margin-bottom: 40px;">
                                <div class="alert activity-overview generic reviewer" style="padding: 10px 20px !important; margin: 0;">
                                    <form name="action" method="post" action="" style="padding: 10px 0;">
                                        <label for="status">Approval options available to you</label>
                                        <div class="input-group">


                                            <select @isChange id="action_approval" class="form-control select2" style="width: 100%;" data-placeholder="Please choose...">
                                                @{
                                                    switch (userRight)
                                                    {
                                                        case "initiator":
                                                        case "none":
                                                            <option>@Model.ReturnApprovalProcess.RequestStatus</option>
                                                            break;
                                                        case "reviewer":
                                                            <option value="Reviewed" selected>Send to Approval</option>
                                                            <option value="Discarded">Discard</option>
                                                            break;
                                                        case "approver":
                                                            <option value="Approved" selected>Approve</option>
                                                            <option value="Pending">Send back to Review</option>
                                                            <option value="Denied">Deny</option>
                                                            break;
                                                        case "completed":
                                                            <option>@Model.ReturnApprovalProcess.RequestStatus</option>
                                                            break;
                                                    }
                                                }
                                            </select>
                                            <span class="input-group-btn">
                                                @{if (userRight != "none")
                                                    {
                                                        var approvalId = Model.ReturnApprovalProcess.Id.Encrypt();
                                                        <button onclick="javascript:UpdateStatusApproval('@approvalId');" class="btn btn-success">Confirm</button>
                                                    }
                                                }
                                            </span>


                                        </div>
                                    </form>
                                </div>
                            </div>
                        }
                    }



                    <br />

                    <section class="associated_forms">

                        <ul class="nav nav-pills alt" style="margin: 0 0 30px 0;">
                            <li class="active"><a href="#" data-toggle="tab" data-target="#approval-0">Overview</a></li>
                            <li><a href="#" data-toggle="tab" data-target="#approval-1">Items &amp; Products</a></li>
                            <li><a href="#" data-toggle="tab" data-target="#approval-2">Comments &amp; Files</a></li>
                        </ul>


                        <div class="tab-content">


                            <!-- Overview -->
                            <div class="tab-pane fade in active" id="approval-0">

                                <div class="row">
                                    <div class="col-xs-12">

                                        <div class="app_upper_dash text-center">
                                            <div class="row">
                                                <div class="col-xs-12 col-md-6">
                                                    <div class="stat_label text-center" style="text-align: center !important;">
                                                        <span>Original Sale total</span>
                                                        <h3>@Model.Sale.SaleTotal.ToCurrencySymbol(currencySettings)</h3>
                                                    </div>
                                                </div>
                                                <div class="col-xs-12 col-md-6">
                                                    <div class="stat_label" style="padding-bottom: 10px; text-align: center !important;">
                                                        <span>Contact</span>
                                                        <h3>@(Model.Sale.Purchaser?.Name)</h3>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <br />




                            </div>
                            <!-- END Overview -->
                            <!-- Items & Products -->
                            <div class="tab-pane fade" id="approval-1">

                                <table class="datatable table-hover table-striped" id="community-list" data-order='[[ 1, "asc" ]]' style="width: 100%;">
                                    <thead>
                                        <tr>
                                            <th data-priority="5" style="width: 40px;" data-orderable="false"></th>
                                            <th data-priority="1">Item</th>
                                            <th data-priority="1">Unit</th>
                                            <th data-priority="2" style="width: 60px;">Qty</th>
                                            <th data-priority="2">Unit price <strong>(@currencySettings.CurrencySymbol)</strong></th>
                                            <th data-priority="3">Discount</th>
                                            <th data-priority="2">Tax <strong>(@currencySettings.CurrencySymbol)</strong></th>
                                            <th data-priority="3">Total <strong>(@currencySettings.CurrencySymbol)</strong></th>
                                            <th data-priority="1" data-orderable="false">Return Qty</th>
                                            <th data-priority="1" data-orderable="false">Return to Inventory</th>
                                            <th data-priority="1" data-orderable="false" style="max-width: 180px;">Credit value <strong>(@currencySettings.CurrencySymbol)</strong></th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ReturnItems)
                                        {
                                            var isReturned = "";
                                            if (item.IsReturnedToInventory)
                                            {
                                                isReturned = "checked";
                                            }
                                            string taxrateName = "(Tax free)";
                                            if (item.SaleItem.Taxes != null)
                                            {
                                                taxrateName = item.SaleItem.StringTaxRates(currencySettings);
                                            }
                                            <tr>
                                                <td>
                                                    <div class="table-avatar" style="background-image: url('@api@item.SaleItem.TraderItem.ImageUri');">&nbsp;</div>
                                                </td>
                                                <td>@item.SaleItem.TraderItem.Name</td>
                                                <td>@(item.SaleItem.Unit?.Name)</td>
                                                <td>@item.SaleItem.Quantity.ToDecimalPlace(currencySettings)</td>
                                                <td>@item.SaleItem.SalePricePerUnit.ToDecimalPlace(currencySettings)</td>
                                                <td>@item.SaleItem.Discount.ToDecimalPlace(currencySettings)%</td>
                                                <td>
                                                    @Html.Raw(taxrateName)
                                                </td>
                                                <td>@item.SaleItem.Price.ToDecimalPlace(currencySettings)</td>
                                                <td>
                                                    @item.ReturnQuantity.ToDecimalPlace(currencySettings)
                                                </td>
                                                <td>
                                                    <div class="checkbox toggle">
                                                        <label>
                                                            <input @isReturned data-toggle="toggle" data-on="Yes" data-off="No" data-onstyle="success" type="checkbox" disabled>
                                                        </label>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="input-group" style="width: 100%;">
                                                        <span class="input-group-addon">@currencySettings.CurrencySymbol</span>
                                                        <input readonly="" value="@item.Credit.ToDecimalPlace(currencySettings)" class="form-control">
                                                    </div>
                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>

                            </div>
                            <!-- END Items & Products -->
                            <!-- Comments & Files -->
                            <div class="tab-pane fade" id="approval-2">

                                @if (Model.ReturnApprovalProcess != null)
                                {
                                    <br /><br />
                                    @* comment and media*@
                                    <div class="app_topnav entity_adds" style="background: #fff; padding: 0;">
                                        <ul class="nav nav-pills app_main_nav">
                                            <li role="presentation" class="active">
                                                <a href="#tab1" data-toggle="tab">
                                                    <i class="fa fa-comments"></i>
                                                    Comments
                                                </a>
                                            </li>
                                            <li role="presentation">
                                                <a href="#tab2" data-toggle="tab">
                                                    <i class="fa fa-folder-open"></i>
                                                    Files
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <div class="tab-content">
                                                <div class="tab-pane fade in active" id="tab1">
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div class="well" style="max-width: 800px;">
                                                                <div class="form-group">
                                                                    <label for="add-comment">Add a comment</label>
                                                                    <textarea id="txt-comment-approval" name="add-comment" class="form-control"></textarea>
                                                                </div>
                                                                <button onclick="addCommentForApproval('@(Model.ReturnApprovalProcess?.Key ?? "")')" class="btn btn-success">Submit</button>
                                                            </div>
                                                            <br />
                                                        </div>
                                                    </div>

                                                    <div id="list-comments-approval">
                                                        @foreach (var post in Model.ReturnApprovalProcess.Posts.OrderByDescending(x => x.StartedDate).Take(pageSize))
                                                        {

                                                            <!-- General post -->
                                                            var fullName = HelperClass.GetFullNameOfUser(post.CreatedBy, userId);
                                                            <article id="post-@post.Id" class="activity post">
                                                                <img style="background-image: url('@api@post.CreatedBy.ProfilePic')" class="activity-avatar" />
                                                                <div class="activity-detail">
                                                                    <div class="activity-meta">
                                                                        <h4>@fullName</h4>
                                                                        <small>@post.StartedDate.ConvertTimeFromUtc(timeZone).ToString(dateFormat + ", hh:mmtt")</small>
                                                                    </div>
                                                                    <div class="activity-overview media-comment">
                                                                        <p>
                                                                            @Html.Raw(post.Message.Replace(Environment.NewLine, "<br />"))
                                                                        </p>
                                                                    </div>
                                                                </div>
                                                                <div class="clearfix"></div>
                                                            </article>
                                                            <!-- END General post -->
                                                        }
                                                    </div>
                                                    @if (Model.ReturnApprovalProcess.Posts.Count() > @pageSize)
                                                    {
                                                        <button id="btnLoadPosts" onclick="LoadMorePosts('@Model.ReturnApprovalProcess.Key', @pageSize,'list-comments-approval')" class="btn btn-info trigger_load">Load older posts</button>
                                                    }

                                                </div>

                                                <div class="tab-pane fade" id="tab2">
                                                    <br />
                                                    <a href="javascript:void(0)" class="btn btn-success" id="btnAddFile" data-toggle="modal" data-target="#create-media"><i class="fa fa-upload"></i> &nbsp; Upload a file</a>

                                                    <br /><br />
                                                    <div id="list-medias">
                                                        @if (Model.ReturnApprovalProcess.SubActivities.Count > 0)
                                                        {
                                                            foreach (var item in Model.ReturnApprovalProcess.SubActivities.OrderByDescending(x => x.Id).Take(pageSize))
                                                            {
                                                                var media = (QbicleMedia)item;
                                                                var createdByName = HelperClass.GetFullNameOfUser(media.StartedBy, userId);
                                                                var createdDate = media.StartedDate.Date == DateTime.UtcNow.Date ? "Today, " + media.StartedDate.ConvertTimeFromUtc(timeZone).ToString("hh:mmtt").ToLower() : media.StartedDate.ConvertTimeFromUtc(timeZone).ToString(dateFormat + " hh:mmtt").ToLower();
                                                                var mediaLastUpdate = media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).First() ?? null;
                                                                var lastUpdateFile = mediaLastUpdate != null ? (mediaLastUpdate.UploadedDate.Date == DateTime.UtcNow.Date ? "Today, " + mediaLastUpdate.UploadedDate.ConvertTimeFromUtc(timeZone).ToString("hh:mmtt").ToLower() : mediaLastUpdate.UploadedDate.ConvertTimeFromUtc(timeZone).ToString(dateFormat + " hh:mmtt").ToLower()) : createdDate;
                                                                //Media post
                                                                <article class="activity media">
                                                                    <img style="background-image: url('@api@media.StartedBy.ProfilePic')" class="activity-avatar" />
                                                                    <div class="activity-detail">
                                                                        <div class="activity-meta">
                                                                            <h4>@createdByName</h4>
                                                                            <small>@createdDate</small>
                                                                            <br class="visible-xs">
                                                                        </div>
                                                                        <div class="activity-overview media">
                                                                            <div class="row">
                                                                                <div class="col-xs-12 col-sm-5 col-md-6 col-lg-5">
                                                                                    <a href="javascript:void(0)" onclick="ShowMediaPage('@media.Key')">
                                                                                        @if (media.FileType.Type == "Image File")
                                                                                        {
                                                                                            <img id="media-@item.Id" class="img-responsive" src='@api@mediaLastUpdate.Uri' />
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <img src="@media.FileType.IconPath" class="img-responsive">
                                                                                        }
                                                                                    </a>
                                                                                </div>
                                                                                <div class="col-xs-12 col-sm-7 col-md-6 col-lg-7 description">
                                                                                    <h5>@media.Name</h5>
                                                                                    <p>
                                                                                        @media.Description
                                                                                    </p>
                                                                                    <small>@media.FileType.Type | Update @lastUpdateFile</small>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="clearfix"></div>
                                                                </article>
                                                                <!-- END Media post -->
                                                            }
                                                        }
                                                    </div>
                                                    @if (Model.ReturnApprovalProcess.SubActivities.Count() > @pageSize)
                                                    {
                                                        <button id="btnLoadMedias" onclick="LoadMoreMedias(@Model.ReturnApprovalProcess.Id,@pageSize,'list-medias')" class="btn btn-info trigger_load">Load older medias</button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                }

                            </div>
                            <!-- END Comments & Files -->


                        </div>

                    </section>

                </div>

            </div>


        </section>
        <!-- ./content -->

    </div>
    <!-- /.content-wrapper -->



    <div class="modal fade left" id="history-view" role="dialog" aria-labelledby="history-view">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h5 class="modal-title">Approval history</h5>
                </div>
                <div class="modal-body">

                    <ul class="timeline" style="margin-left: -5px;">
                        @foreach (var date in timelineDate)
                        {
                            var dateStart = date.ConvertTimeFromUtc(timeZone).DatetimeToOrdinal();
                            var dateStr = date.Date == today.Date ? "Today" : dateStart;

                            <li class="time-label">
                                <span class="label label-lg label-info">
                                    @dateStr
                                </span>
                            </li>
                            foreach (var tl in timeline.Where(d => d.LogDate.Date == date.Date))
                            {
                                <li>
                                    <div class="person" style="background-image: url('@api@tl.UserAvatar');"></div>
                                    <div class="timeline-item">
                                        <span class="time"><i class="fa fa-clock-o"></i> @tl.Time</span>
                                        <h4 class="timeline-header">@tl.Status</h4>
                                    </div>
                                </li>
                            }
                            <br />
                        }


                    </ul>


                    <br />
                    <button class="btn btn-primary" data-dismiss="modal">Close</button>

                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->


    <div class="modal fade left" id="team-view" role="dialog" aria-labelledby="team-view">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h5 class="modal-title">Team Members</h5>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-xs-12">
                            <ul class="app_subnav">
                                <li class="active"><a href="#initiators" data-toggle="tab">Initiators</a></li>
                                <li><a href="#reviewers" data-toggle="tab">Reviewers</a></li>
                                <li><a href="#approvers" data-toggle="tab">Approvers</a></li>
                            </ul>
                        </div>
                    </div>

                    <br />

                    <div class="tab-content">


                        <div class="tab-pane fade in active" id="initiators">

                            <ul class="avatar-listing team unstyled" style="margin-bottom: 0 !important;">
                                @foreach (var initiator in Model.Workgroup.Members)
                                {
                                    var title = "Initiator";
                                    if (Model.Workgroup.Approvers.Any(e => e.Id == initiator.Id))
                                    {
                                        title += " , Approver";
                                    }
                                    if (Model.Workgroup.Reviewers.Any(e => e.Id == initiator.Id))
                                    {
                                        title += " , Reviewer";
                                    }

                                    <li>
                                        <a href="javascript:">
                                            <div class="owner-avatar">
                                                <div class="avatar-sm" style="background: url('@api@initiator.ProfilePic');"></div>
                                            </div>
                                            <h5>
                                                @HelperClass.GetFullNameOfUser(initiator)<br>
                                                <small>
                                                    @title
                                                </small>
                                            </h5>
                                        </a>
                                    </li>

                                }
                            </ul>

                        </div>

                        <div class="tab-pane fade" id="reviewers">

                            <ul class="avatar-listing team unstyled" style="margin-bottom: 0 !important;">
                                @foreach (var review in Model.Workgroup.Reviewers)
                                {
                                    <li>
                                        <a href="javascript:">
                                            <div class="owner-avatar">
                                                <div class="avatar-sm" style="background: url('@api@review.ProfilePic');"></div>
                                            </div>
                                            <h5>
                                                @HelperClass.GetFullNameOfUser(review)<br>
                                                <small>
                                                    @{
                                                        var detail = "Reviewer";
                                                        if (Model.Workgroup.Approvers.Any(e => e.Id == review.Id))
                                                        {
                                                            detail += " ,Approver";
                                                        }
                                                    }
                                                    @detail
                                                </small>
                                            </h5>
                                        </a>
                                    </li>
                                }

                            </ul>

                        </div>

                        <div class="tab-pane fade" id="approvers">
                            <ul class="avatar-listing team unstyled" style="margin-bottom: 0 !important;">
                                @foreach (var review in Model.Workgroup.Approvers)
                                {
                                    <li>
                                        <a href="javascript:">
                                            <div class="owner-avatar">
                                                <div class="avatar-sm" style="background: url('@api@review.ProfilePic');"></div>
                                            </div>
                                            <h5>
                                                @HelperClass.GetFullNameOfUser(review)<br>
                                                <small>
                                                    @{
                                                        var detail = "Approver";
                                                        if (Model.Workgroup.Approvers.Any(e => e.Id == review.Id))
                                                        {
                                                            detail += " ,Reviewer";
                                                        }
                                                    }
                                                    @detail
                                                </small>
                                            </h5>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>

                    </div>

                    <br /><br />
                    <button class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

</div>

@{
    Html.RenderAction("GenerateModalMedia", "Qbicles");
}

@{
    if (Debugger.IsAttached)
    {
        <script src="~/Scripts/dev/trader.domain.min.js"></script>
        <script src="~/Scripts/dev/trader.sales.return.review.js"></script>
    }
    else
    {
        <script src="~/Scripts/dev/trader.domain.min.js"></script>
        <script src="~/Scripts/dev/trader.sales.return.review.js"></script>
        @*<script src="~/Scripts/dev/trader.sales.return.review.min.js"></script>*@
    }
}