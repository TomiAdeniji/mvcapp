@using Qbicles.Models.Trader
@model List<TraderContact>
@{
    var api = (string)ViewBag.DocRetrievalUrl;
    var workGroups = (List<WorkGroup>)ViewBag.WorkGroups ?? (new List<WorkGroup>());
    var contactGroups = (List<TraderContactGroup>)ViewBag.ContactGroups;

    var domainId = (int)ViewBag.CurrentDomainId;
    var currencySettings = (Qbicles.Models.CurrencySetting)ViewBag.CurrencySettings;
}





<table class="datatable table-hover table-striped" width="100%" id="trader-contact-list" data-order='[[2, "asc"]]'>
    <thead>
        <tr>
            <th data-priority="1" style="width: 100px;" data-orderable="false">Avatar</th>
            <th data-priority="1">Name</th>
            <th data-priority="2">Contact group</th>
            <th data-priority="2">Workgroup</th>
            <th data-priority="1">Balance <strong>(@currencySettings.CurrencySymbol)</strong></th>
            <th data-priority="1">Status</th>
            <th data-priority="2" data-orderable="false"></th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var ct in Model)
            {
                <tr>
                    <td>
                        <div class="table-avatar" style="background-image: url('@api@ct.AvatarUri');">&nbsp;</div>
                    </td>
                    <td>@ct.Name</td>
                    @if (ct.ContactGroup != null)
                    {
                        <td>@ct.ContactGroup.Name</td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td>
                        @{
                            if (ct.Workgroup != null)
                            {
                                @ct.Workgroup.Name
                            }
                        }
                    </td>
                    <td>&nbsp;</td>
                    <td>
                        @{
                            switch (ct.Status)
                            {
                                case TraderContactStatusEnum.Draft:
                                    <span class="label label-lg label-primary">Draft</span>
                                    break;
                                case TraderContactStatusEnum.PendingReview:
                                    <span class="label label-lg label-warning">Awaiting Review</span>
                                    break;
                                case TraderContactStatusEnum.PendingApproval:
                                    <span class="label label-lg label-warning">Awaiting Approval</span>
                                    break;
                                case TraderContactStatusEnum.ContactDenied:
                                    <span class="label label-lg label-danger">Denied</span>
                                    break;
                                case TraderContactStatusEnum.ContactApproved:
                                    <span class="label label-lg label-success">Approved</span>
                                    break;
                                case TraderContactStatusEnum.ContactDiscarded:
                                    <span class="label label-lg label-danger">Discarded</span>
                                    break;
                            }
                        }
                    </td>
                    <td>
                        @if (workGroups.Any(w => w.Id == ct.Workgroup?.Id))
                        {
                            if (ct.Status == TraderContactStatusEnum.Draft)
                            {
                                <button class="btn btn-info" onclick="EditContact(@ct.Id)" data-toggle="modal" data-target="#app-trader-modal-contact"><i class="fa fa-pencil"></i> &nbsp; Continue</button>
                            }
                            else
                            {
                                <button class="btn btn-primary" onclick="window.location.href = '/TraderContact/ContactMaster?key=@(HttpUtility.UrlEncode(ct.Key))';"><i class="fa fa-eye"></i> &nbsp; Manage</button>
                            }
                            <button class="btn btn-danger" @(ct.InUsed == true ? "disabled" : "") data-toggle="modal" data-target="#app-contact-confirm" onclick="ConfirmDeleteContact(@ct.Id, '@ct.Name')"><i class="fa fa-trash"></i>&nbsp; Delete</button>
                        }

                    </td>
                </tr>
            }
        }

    </tbody>
</table>


<script>
    //$("#trader-contact-list").DataTable({
    //    responsive: true,
    //    "lengthChange": true,
    //    "pageLength": 10,
    //    "columnDefs": [
    //        {
    //            "targets": 3,
    //            "orderable": false
    //        }
    //    ],
    //    "order": []
    //});

    //$("#trader-contact-list").show();


    //

    //$("#filter-contact-group").on("change",
    //    function () {
    //        $("#trader-contact-list").DataTable().search($(this).val(), true, false, true).draw();
    //    });
    //$("#subfilter-group").select2();

    //$("#subfilter-group").on("change",
    //    function () {
    //        $("#trader-contact-list").DataTable().search($(this).val(), true, false, true).draw();
    //    });
    //$("#search_dt").keyup(function () {
    //    $("#trader-contact-list").DataTable().search($(this).val()).draw();
    //});
</script>