@using Qbicles.Models.UserInformation
@model List<Experience>

@foreach (var expItem in Model)
{
    if (expItem.Type == ExperienceType.EducationExperience)
    {
        var eduExp = expItem as EducationExperience;
        <div class="workhistory">
            <div class="row">
                <div class="col-xs-12">
                    <h5 class="place">@eduExp.Institution</h5>
                    <h5 class="course">@eduExp.Course</h5>
                    <h5 class="dates">@(eduExp.StartDate.ToString("MMM yyyy")) - @(eduExp.EndDate == null ? "Present" : ((DateTime)eduExp.EndDate).ToString("MMM yyyy"))</h5>
                </div>
            </div>

            <p class="summ">@expItem.Summary</p>
            <br/>
            <button class="btn btn-warning" onclick="modalSaveEduExpShow('@expItem.Key')"><i class="fa fa-pencil"></i> &nbsp; Edit</button>
        </div>
    }
    else
    {
        var workExp = expItem as WorkExperience;
        <div class="workhistory">
            <div class="row">
                <div class="col-xs-12">
                    <h5 class="place">@(workExp.Role)</h5>
                    <h5 class="course">@(workExp.Company)</h5>
                    <h5 class="dates">@(workExp.StartDate.ToString("MMM yyyy")) - @(workExp.EndDate == null ? "Present" : ((DateTime)workExp.EndDate).ToString("MMM yyyy"))</h5>
                </div>
            </div>

            <p class="summ">@workExp.Summary</p>
            <br/>
            <button class="btn btn-warning" onclick="modalSaveWorkExpShow('@expItem.Key')"><i class="fa fa-pencil"></i> &nbsp; Edit</button>
        </div>
    }
}

