@using Qbicles.Models.Trader;
@using Qbicles.Models.Trader.Budgets;
@model List<BudgetScenario>
@{ 
    var api = (string)ViewBag.DocRetrievalUrl;
}

@foreach (var item in Model)
{
    <article class="col">
        @if (item.IsActive)
        {
            <span class="last-updated statusmode active">Active Budget</span>
        }
        <div class="qbicle-opts">
            <a href="#" data-toggle="modal" data-target="#app-trader-budgetscenario-add" onclick="budgetScenatioAddEdit('@item.Id')" data-tooltip="Edit this Budget Scenario">
                <i class="fa fa-cog"></i>
            </a>
        </div>
        <a href="/TraderBudget/BudgetMain?id=@item.Id">
            <div class="avatar" style="background-image: url('@api@item.FeaturedImage');">&nbsp;</div>
            <h1 style="color: #333;">@item.Title</h1>
        </a>
        <p class="qbicle-detail">@item.Description</p>

        <br />
        @if (item.IsActive)
        {
            <button class="btn btn-success" disabled style="margin-bottom: 5px;">Active</button>
        }
        else
        {
            <button class="btn btn-primary" style="margin-bottom: 5px;" onclick="setActive('@item.Id')"><i class="fa fa-check green"></i> &nbsp; Set active</button>
        }

    </article>
}


