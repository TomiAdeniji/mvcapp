@using Qbicles.BusinessRules
@using Qbicles.Models
@using Qbicles.Models.Trader.Budgets

@model BudgetScenarioItemGroup
@{
    ViewBag.Title = "Budget Scenario: " + Model.BudgetScenario.Title;
    var api = (string)ViewBag.DocRetrievalUrl;
    var timeZone = (string)ViewBag.CurrentTimeZone ?? "";
    var userId = ViewBag.CurrentUserId;
    var userAvatar = ViewBag.CurrentUserAvatar;
    var userRight = "none";
    var traderAppRight = (IsReviewerAndApproverModel)ViewBag.TraderApprovalRight;

    var oView = ViewBag.oView;

    var hidden2 = "";
    if (oView == "M")
    {
        hidden2 = "hidden";
    }
    //o1
    if (!traderAppRight.IsInitiators && !traderAppRight.IsReviewer && !traderAppRight.IsApprover)
    { userRight = "none"; }//hiden approval, no edit
                           //o2
    else if (traderAppRight.IsInitiators && !traderAppRight.IsReviewer && !traderAppRight.IsApprover)
    { userRight = "initiator"; } // readonly approval, no edit
                                 //o3
    else if (traderAppRight.IsReviewer && Model.ApprovalRequest.RequestStatus == ApprovalReq.RequestStatusEnum.Pending)
    {
        userRight = "reviewer";
    }//If the user is an ApprovalReq.ApprovalRequestDefinition.Reviewer and the Status of the ApprovalReq is Pending, the drop down displays the items Discard, or Send to Approval.
     //o4
    else if (traderAppRight.IsApprover && Model.ApprovalRequest.RequestStatus == ApprovalReq.RequestStatusEnum.Reviewed)
    {
        userRight = "approver";
    }
    //o4.1
    else if (traderAppRight.IsApprover && Model.ApprovalRequest.RequestStatus == ApprovalReq.RequestStatusEnum.Pending)
    {
        userRight = "initiator";
    }
    //o5
    else if (Model.ApprovalRequest.RequestStatus == ApprovalReq.RequestStatusEnum.Approved
             || Model.ApprovalRequest.RequestStatus == ApprovalReq.RequestStatusEnum.Denied
             || Model.ApprovalRequest.RequestStatus == ApprovalReq.RequestStatusEnum.Discarded)
    {
        userRight = "completed";
    }

    var confirm = "";
    var isChange = "";
    if (userRight == "initiator" || userRight == "completed")
    {
        isChange = "disabled";
        confirm = "hidden";
    }
    if (Model.ApprovalRequest.RequestStatus != ApprovalReq.RequestStatusEnum.Pending)
    {
    }
    if (isChange == "disabled")
    {
        confirm = "hidden";
    }

    var today = (DateTime)ViewBag.Today;
    var timeline = (List<ApprovalStatusTimeline>)ViewBag.Timeline;
    var timelineDate = (List<DateTime>)ViewBag.TimelineDate;
}

<br class="visible-xs">
<br class="visible-xs">

@{
    <div class="alert activity-overview generic reviewer approval-action @hidden2" style="margin-bottom: 5px;">
        <img style="background-image: url('@api@userAvatar')" class="activity-avatar">
        <strong style="display: block; padding-bottom: 5px;">You</strong>
        @if (Model.ApprovalRequest != null)
        {
            <input type="hidden" id="action_approval_default" value="@Model.ApprovalRequest.RequestStatus" />
        }
        else
        {
            <input type="hidden" id="action_approval_default" value="" />
        }
        <input type="hidden" id="action_approval_default" value="@Model.ApprovalRequest.RequestStatus" />
        <select @isChange id="action_approval" class="form-control select2" style="width: 100%;" data-placeholder="Please choose...">
            @{
                switch (userRight)
                {
                    case "initiator":
                        <option>@Model.ApprovalRequest.RequestStatus</option>
                        break;
                    case "reviewer":
                        <option value="Reviewed" selected>Send to Approval</option>
                        <option value="Discarded">Discard</option>
                        break;
                    case "approver":
                        <option value="Approved" selected>Approve</option>
                        <option value="Pending">Send back to Review</option>
                        <option value="Denied">Deny</option>
                        break;
                    case "completed":
                        <option>@Model.ApprovalRequest.RequestStatus</option>
                        break;
                }
            }
        </select>

        @{
            if (confirm == "")
            {
                var approvalId = Model.ApprovalRequest?.Id.Encrypt();
                <button id="approval-button" onclick="javascript:UpdateStatusApproval('@approvalId');" style="margin: 8px 0 3px 0;" class="btn btn-success">
                    <div class="loading-approval hidden">
                        <i class="fa fa-spinner fa-spin"></i> &nbsp; Approving...
                    </div>
                    <div class="general-approval">
                        Confirm
                    </div>
                </button>
            }
        }

    </div>
}

<br />

<ul class="timeline">
    @foreach (var date in timelineDate)
    {
        var dateStart = HelperClass.DatetimeToOrdinal(date.ConvertTimeFromUtc(timeZone));
        var dateStr = date.Date == today.Date ? "Today" : dateStart;

        <li class="time-label">
            <span class="label label-lg label-primary">
                @dateStr
            </span>
        </li>
        foreach (var tl in timeline.Where(d => d.LogDate.Date == date.Date))
        {
            <li>
                <i class="@tl.Icon"></i>
                <div class="timeline-item">
                    <span class="time"><i class="fa fa-clock-o"></i> @tl.Time</span>
                    <h4 class="timeline-header">@tl.Status</h4>
                </div>
            </li>
        }
        <br />
    }

</ul>

<script>
    $("#action_approval").select2();
</script>