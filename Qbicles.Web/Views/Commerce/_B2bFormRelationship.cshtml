@*@using Qbicles.Models.B2B
@using Qbicles.BusinessRules
@using Qbicles.Models
@model B2BProfile
@{
    var currentDomain = (QbicleDomain)ViewBag.CurrentDomain;
    var members= (List<ApplicationUser>)ViewBag.Members;
    var relationship= (B2BRelationship)ViewBag.Relationship;
}
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            @if (relationship == null)
            {
                <h5 class="modal-title">Form a relationship with @Model.BusinessName</h5>
                <input type="hidden" value="@((int)ViewBag.ToDomainId)" id="hdfToDomainId" />
            }
            else
            {
                <h5 class="modal-title">Edit @Model.BusinessName Relationship Managers</h5>
            }
        </div>
        <div class="modal-body">
            @if (relationship == null)
            {
                <div class="activity-overview generic help-text">
                    <i class="fa fa-info-circle"></i>
                    <p>
                        We're delighted by your interest in forming a relationship with us here at @Model.BusinessName. Please fill out the information below
                        and we'll review your request. Once approved, a private Qbicle will be created that will allow us to communicate and potentially
                        establish deeper, working relationships.
                    </p>
                </div>
            }
            <div class="well custom avatarpickermulti" data-tooltip-position="right">
                <div class="form-group" style="margin: 0;">
                    <label for="assignee">Relationship managers assigned to @Model.BusinessName <i class="fa fa-info-circle blue" data-tooltip="Only your relationship managers can communicate with @Model.BusinessName"></i></label>
                    <select id="slassignee" name="assignee" class="form-control checkmulti" multiple="">
                        @foreach (var item in currentDomain.Users)
                        {
                            <option value="@item.Id" @(members.Any(s => s.Id == item.Id) ? "selected" : "")>@HelperClass.GetFullNameOfUser(item)</option>
                        }
                    </select>
                </div>
            </div>
            @if (relationship == null)
            {
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button class="btn btn-success" onclick="sendRequestRelationship()">Send request</button>
            }
            else
            {
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button class="btn btn-success" onclick="updateRelationshipManagers(@relationship.Id)">Confirm</button>
            }
        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->*@
