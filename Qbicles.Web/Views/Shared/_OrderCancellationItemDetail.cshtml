@using Qbicles.Models.TraderApi
@using Qbicles.BusinessRules
@using Qbicles.Models
@using Qbicles.BusinessRules.Helper;
@model Order
@{
    var currencySetting = (CurrencySetting)ViewBag.CurrencySetting;
    var voucher = (Qbicles.Models.Loyalty.Voucher)ViewBag.Voucher;
}

<div class="modal-lg modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h5 class="modal-title">Items in this order</h5>
        </div>
        <div class="modal-body">
            @if (voucher?.Id > 0)
            {
                <div class="activity-overview generic help-text animated bounce">
                    <i class="fa fa-info-circle"></i>
                    <p>
                        <strong>@voucher.Promotion.Name</strong> - <strong>@voucher.Code</strong> voucher applied
                    </p>
                </div>
            }
            <ul class="unstyled mdv2-wrapper">
                @foreach (var orderItem in Model.Items)
                {
                    var itemImage = ConfigManager.DefaultProductPlaceholderImageUrl;
                    if (orderItem.ImageUri.Split('=').Length > 1)
                    {
                        itemImage = orderItem.ImageUri.Split('=')[1];
                    }
                    <li class="basket-item" style="border: 0;">
                        <div class="item-thumb" style="background: url('@ViewBag.DocRetrievalUrl@itemImage');"></div>
                        <div class="item-detail" style="padding-left: 0;">
                            <a href="#">@orderItem.Name</a>

                            <div class="row">
                                <div class="col-xs-6">@orderItem.Variant.Name</div>
                                <div class="col-xs-6 text-right">
                                    @((orderItem.Variant.AmountInclTax + orderItem.Variant.DiscountAmount).ToCurrencySymbol(currencySetting))
                                </div>
                            </div>

                            @if (orderItem.Extras != null && orderItem.Extras.Count > 0)
                            {
                                foreach (var itemExtra in orderItem.Extras)
                                {
                                    <div class="row">
                                        <div class="col-xs-6">+ @itemExtra.Name</div>
                                        <div class="col-xs-6 text-right">
                                            @((itemExtra.AmountInclTax + itemExtra.DiscountAmount).ToCurrencySymbol(currencySetting))
                                        </div>
                                    </div>
                                }
                            }

                            <div class="row" style="margin-top: 10px; padding-top: 10px; border-top: 1px solid #f5f5f5;">
                                <div class="col-xs-6">Subtotal</div>
                                <div class="col-xs-6 text-right">
                                    @{
                                        var variantTotalAmount = orderItem.Variant.TotalAmount;
                                        if (variantTotalAmount == 0)
                                            { variantTotalAmount = orderItem.Variant.AmountInclTax + orderItem.Variant.DiscountAmount; }

                                        var itemPriceSum = variantTotalAmount + (orderItem.Extras?.Sum(e => e.TotalAmount) ?? 0);

                                        var itemPriceDiscountSum = orderItem.Variant.TotalDiscount + (orderItem.Extras?.Sum(e => e.TotalDiscount) ?? 0);
                                    }

                                    @if (itemPriceDiscountSum > 0)
                                    {
                                        <span style="opacity: 0.6; text-decoration: line-through;" class="red">
                                            @((itemPriceDiscountSum + itemPriceSum).ToDecimalPlace(currencySetting))
                                        </span>
                                    }
                                    @itemPriceSum.ToCurrencySymbol(currencySetting)
                                </div>
                            </div>
                        </div>
                        <div class="item-options">
                            @orderItem.Quantity
                        </div>
                    </li>
                }
                <li class="basket-footer" style="max-width: 100%; padding: 30px 0;">
                    <div class="activity-overview task" style="padding: 20px 20px 15px 20px;">
                        <div class="pull-left">Total:</div>
                        <div class="pull-right baskettot">
                            @if (Model.Discount > 0)
                            {
                                <span style="opacity: 0.6; text-decoration: line-through;" class="red">
                                    @((Model.AmountInclTax + Model.Discount).ToDecimalPlace(currencySetting))
                                </span>
                            }
                            @Model.AmountInclTax.ToCurrencySymbol(currencySetting)
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </li>
            </ul>

        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
