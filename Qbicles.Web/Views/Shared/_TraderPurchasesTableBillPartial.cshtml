@using Qbicles.Models.Trader
@using Qbicles.BusinessRules;
@model TraderPurchase
@{
    var dateFormat = (string)ViewBag.CurrentDateFormat;
    var domainId = (int)ViewBag.CurrentDomainId;
    var currencySettings = (Qbicles.Models.CurrencySetting)ViewBag.CurrencySettings;
}
<table class="datatable table-hover" id="bill_invoice_table" style="background: #fff; width: 100%;" data-paging="false">
    <thead>
        <tr>
            <th>Date</th>
            <th>Ref</th>
            <th>Amount <strong>(@currencySettings.CurrencySymbol)</strong></th>
            <th>Status</th>
            <th>Payments</th>
            <th data-orderable="false">Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var bill in Model.Invoices.OrderByDescending(d => d.DueDate))
        {
            <tr>
                <td>@bill.DueDate.ToString(dateFormat)</td>
                <td>
                    #@if (bill.Reference != null)
                    {
                        @bill.Reference.FullRef
                    }
                </td>
                <td>@bill.TotalInvoiceAmount.ToDecimalPlace(currencySettings)</td>
                <td>
                    @switch (bill.Status)
                    {
                        case TraderInvoiceStatusEnum.Draft:
                            <span class="label label-lg label-primary">Draft</span>
                            break;
                        case TraderInvoiceStatusEnum.InvoiceApproved:
                            <span class="label label-lg label-success">Approved</span>
                            break;
                        case TraderInvoiceStatusEnum.InvoiceDenied:
                            <span class="label label-lg label-warning">Denied</span>
                            break;
                        case TraderInvoiceStatusEnum.InvoiceDiscarded:
                            <span class="label label-lg label-info">Discarded</span>
                            break;
                        case TraderInvoiceStatusEnum.InvoiceIssued:
                            <span class="label label-lg label-danger">Issued</span>
                            break;
                        case TraderInvoiceStatusEnum.PendingApproval:
                            <span class="label label-lg label-success">Approval</span>
                            break;
                        case TraderInvoiceStatusEnum.PendingReview:
                            <span class="label label-lg label-warning">In Review</span>
                            break;
                    }
                </td>
                <td>@bill.Payments.Count</td>
                <td>
                    @if (bill.Status == TraderInvoiceStatusEnum.Draft)
                    {
                        <button class="btn btn-info" data-toggle="modal" data-target="#app-trader-bill-add" onclick="AddEditTraderPurchaseBill(@bill.Id, @Model.Id)"><i class="fa fa-pencil"></i> &nbsp; Continue</button>
                    }
                    else
                    {
                        <button class="btn btn-primary" onclick="window.location.href='/TraderBill/BillManage?id=@bill.Id';"><i class="fa fa-eye"></i> &nbsp; Manage</button>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>

<br />
@if (Model.Status == TraderPurchaseStatusEnum.PurchaseApproved || Model.Status == TraderPurchaseStatusEnum.PurchaseOrderIssued)
{
    <a href="#" class="btn btn-success" data-toggle="modal" onclick="AddEditTraderPurchaseBill(0,@Model.Id)" data-target="#app-trader-bill-add"><i class="fa fa-plus"></i> &nbsp; Add a bill</a>
}


<script>
    $(document).ready(function () {
        if ($.fn.DataTable.isDataTable('#bill_invoice_table')) {
            $('#bill_invoice_table').DataTable().destroy();
        }
        $('#bill_invoice_table').DataTable().draw();
    });
</script>





