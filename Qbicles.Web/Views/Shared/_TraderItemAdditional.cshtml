@using Qbicles.Models.Trader;
@using Qbicles.Models.Trader.Resources
@model TraderItem
@{
    var location = (TraderLocation)ViewBag.Location ?? (new TraderLocation());
    var traderGroups = (List<TraderGroup>)ViewBag.TraderGroups ?? (new List<TraderGroup>());
    var api = (string)ViewBag.DocRetrievalUrl;
    var callBack = (bool)(ViewBag.CallBack ?? false);
}

<div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h5 class="modal-title">Additional item information</h5>
        </div>
        <div class="modal-body">

            <div class="well custom" style="padding-bottom: 30px;">

                <div class="row">
                    <div class="col-xs-12 col-sm-6">
                        <h5>Brand</h5>
                        @if (Model.AdditionalInfos.Any(q => q.Type == AdditionalInfoType.Brand))
                        {
                            <p>@Model.AdditionalInfos.FirstOrDefault(q => q.Type == AdditionalInfoType.Brand).Name</p>
                        }
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <h5>Needs fulfilled</h5>
                        <p>@string.Join(", ", Model.AdditionalInfos.Where(q => q.Type == AdditionalInfoType.Need).Select(q => q.Name))</p>
                    </div>
                </div>

                <br />

                <div class="row">
                    <div class="col-xs-12 col-sm-6">
                        <h5>Rating</h5>
                        @if (Model.AdditionalInfos.Any(q => q.Type == AdditionalInfoType.QualityRating))
                        {
                            var star = Model.AdditionalInfos.FirstOrDefault(q => q.Type == AdditionalInfoType.QualityRating).Name;
                            bool isStar = true;
                            for (int i = 0; i < star.Length; i++)
                            {
                                if (star[i] != '*')
                                {
                                    isStar = false;
                                    break;
                                }
                            }
                            if (isStar)
                            {
                                for (int i = 0; i < star.Length; i++)
                                {
                                    <i class="fa fa-star" style="color: #fc8b02;"></i>
                                }
                            }
                            else
                            {
                                <p>@star</p>
                            }
                        }
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <h5>Additional tags</h5>
                        @if (Model.AdditionalInfos.Any(q => q.Type == AdditionalInfoType.ProductTag))
                        {
                            var tags = Model.AdditionalInfos.Where(q => q.Type == AdditionalInfoType.ProductTag).Select(e => e.Name);
                            var tagValues = string.Join(",",tags);
                            <input name='tags4' disabled value='@tagValues'>
                        }
                    </div>
                </div>

            </div>



            <br />
            <button class="btn btn-primary" data-dismiss="modal">Close</button>
        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->


<link href="~/Content/DesignStyle/css/tagify-yaireo.css" rel="stylesheet" />
<script src="~/Content/DesignStyle/js/tagify.polyfills.min.js"></script>
<script src="~/Content/DesignStyle/js/tagify.js"></script>
<script>
    var input = document.querySelector('input[name=tags4]'),
        tagify = new Tagify(input);
</script>