@using Qbicles.Models
@using Qbicles.BusinessRules
@model QbicleLink
@{
    var currentUser = (ApplicationUser)ViewBag.CurrentUser;
    var currentDomainId = (int)ViewBag.CurrentDomainId;
    var pageSize = HelperClass.activitiesPageSize;
    var Comments = Model.Posts.OrderByDescending(x => x.StartedDate).Take(pageSize);
    var count_Comments = Model.Posts.Count();
    var count_Medias = Model.SubActivities.Count();
    var api = (string)ViewBag.DocRetrievalUrl;
    var dateFormat = (string)ViewBag.CurrentDateFormat;
    var timeZone = (string)ViewBag.CurrentTimeZone;

}
<div class="content-wrapper qbicle-detail mdv2-wrapper" style="position: relative;">
    <!-- Main content -->
    <section class="mdv2 dash" data-tooltip-color="teal" data-tooltip-delay="300" data-tooltip-animate-function="spin" style="border-top: 1px solid #f1f1f1;">
        <!-- App bar -->
        <div class="mdv2-col-app" style="margin-bottom: 0;">

            <div data-spy="affix" class="contained-sidebar">

                <div class="activity-overview plain company-overview welcome-info" style="text-align: left !important; flex: none; margin: 0; padding-top: 30px; padding-bottom: 0;">

                    <div class="pull-left" style="margin-bottom: 15px;">
                        <a onclick="QbicleSelected('@Model.Qbicle.Key','Dashboard')" class="btn btn-info"><i class="fa fa-angle-up"></i> &nbsp; Qbicle</a>
                        @if (Model.StartedBy.Id == currentUser.Id || currentUser.DomainAdministrators.Any(x => x.Id == currentDomainId))
                        {
                            <a href="#create-link" data-toggle="modal" class="btn btn-warning"><i class="fa fa-pencil"></i> &nbsp; Edit</a>
                        }
                    </div>
                    <div class="clearfix"></div>

                    <br />

                    <h1 style="line-height: 1.2;">@Model.Name</h1>
                    <br />

                    <span class="label label-lg label-primary">@(Model.Topic != null ? Model.Topic.Name : "")</span>

                    <br /><br /><br />
                    <p style="color: rgba(0, 0, 0, 0.5);">@(Model.Description)</p>

                    <br />

                    <div class="row">
                        <div class="col-xs-12">
                            <label>URL</label>
                            <p><a href="@Model.URL">@(Model.URL)</a></p>
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
        <!-- END App bar -->
        <!-- Main area -->
        <div class="mdv2-col-dash">
            <div class="spacing" style="padding-top: 0;">


                <div class="row">
                    <div class="col-xs-12">
                        <ul class="app_subnav admintabs" style="padding-top: 0;">
                            <li class="active"><a href="#task-comments" data-toggle="tab">Comments</a></li>
                            <li><a href="#link-files" data-toggle="tab">Files</a></li>
                        </ul>
                    </div>
                </div>

                <br />

                <div class="tab-content">


                    <!-- Comments -->
                    <div class="tab-pane fade in active" id="task-comments">

                        <div class="well custom" style="margin-bottom: 60px;">
                            <div class="row">
                                <div class="col-xs-12">
                                    <div class="form-group">
                                        <label for="add-comment">Add a comment</label>
                                        <textarea id="txt-comment-link"  name="addcomment" onkeyup="lkFunc.validateAddComment()" style="height: 80px;" class="form-control"></textarea>
                                        <label id="addcomment-error" class="error" for="addcomment" style="display: none;">Your post is longer than the 1,500 character limit. Please reduce the length, or split it across multiple posts</label>
                                    </div>
                                </div>
                            </div>

                            <button class="btn btn-success" onclick="lkFunc.AddCommentToLink('@Model.Key')">Submit</button>
                        </div>
                        <div id="list-comments-link">
                            @if (Comments != null && count_Comments > 0)
                            {
                                foreach (var item in Comments)
                                {
                                    <!-- General post -->
                                    <article id="post-@item.Id" class="activity post">
                                        <div class="activity-avatar" style="background-image: url('@(api+item.CreatedBy.ProfilePic)&size=T');"></div>
                                        <div class="activity-detail">
                                            <div class="activity-meta">
                                                <h4>@HelperClass.GetFullNameOfUser(item.CreatedBy, currentUser.Id)</h4>
                                                <small>@item.StartedDate.ConvertTimeFromUtc(timeZone).ToString(dateFormat+", hh:mmtt")</small>
                                            </div>

                                            <div class="activity-overview media-comment">
                                                <p>@Html.Raw(item.Message.Replace(Environment.NewLine, "<br/>"))</p>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </article>
                                    <!-- END General post -->
                                }
                            }
                        </div>
                        @if (count_Comments > pageSize)
                        {
                        <button id="btnLoadPosts" onclick="lkFunc.LoadMorePosts('@Model.Key', @pageSize, 'list-comments-link')" class="btn btn-info trigger_load">Load older posts</button>
                        }
                    </div>
                    <!-- END Comments -->
                    <!-- Files -->
                    <div class="tab-pane fade" id="link-files">
                        @if (Model.ClosedBy == null)
                        {
                            <button class="btn btn-success community-button" data-toggle="modal" data-target="#create-media" style="max-width: 230px; margin: 15px 0 30px 0;">
                                <i class="fa fa-upload"></i> &nbsp; Add a file
                            </button>
                        }
                        <div id="list-medias">
                            @if (count_Medias > 0)
                            {
                                foreach (var item in Model.SubActivities.OrderByDescending(x => x.Id).Take(pageSize))
                                {
                                    var media = (QbicleMedia)item;
                                    var createdByName = media.StartedBy.Id == currentUser.Id ? "Me" : HelperClass.GetFullNameOfUser(media.StartedBy);
                                    var createdDate = media.StartedDate.Date == DateTime.Now.Date ? "Today, " + media.StartedDate.ToString("hh:mmtt") : media.StartedDate.ToString(dateFormat+" hh:mmtt");
                                    var lastUpdateFile = "";
                                    var mediaLastupdate = media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault() ?? null;
                                    if (mediaLastupdate != null)
                                    {
                                        lastUpdateFile = mediaLastupdate?.UploadedDate.Date == DateTime.Now.Date ? "Today, " + mediaLastupdate.UploadedDate.ToString("hh:mmtt") : mediaLastupdate.UploadedDate.ToString(dateFormat+" hh:mmtt");
                                    } //Media post
                                    <!-- Media post -->
                                    <article class="activity media">
                                        <div class="activity-avatar" style="background-image: url('@api@(media.StartedBy.ProfilePic)&size=T');"></div>
                                        <div class="activity-detail" style="width: 100%; max-width: 100%;">
                                            <div class="activity-meta">
                                                <h4>@createdByName</h4>
                                                <small>@createdDate</small>
                                                <br class="visible-xs">
                                            </div>

                                            <div class="activity-overview media">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-5 col-lg-4">
                                                        <a href="javascript:void(0)" onclick="ShowMediaPage('@media.Key')">
                                                            @if (media.FileType.Type == "Image File")
                                                            {
                                                                <img id="media-@item.Id" class="img-responsive" src='@api@(mediaLastupdate.Uri)&size=M' />
                                                            }
                                                            else
                                                            {
                                                                <img src="@media.FileType.ImgPath" class="img-responsive">
                                                            }
                                                        </a>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-7 col-lg-8 description" style="padding-top: 0;">
                                                        <h5>@media.Name</h5>
                                                        <p>
                                                            @media.Description
                                                        </p>
                                                        <small>@Utility.GetFileTypeDescription(media.FileType.Extension) | Update @lastUpdateFile</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </article>
                                    <!-- END Media post -->
                                }
                            }
                            @if (count_Medias > pageSize)
                            {
                                <button id="btnLoadMedias" onclick="lkFunc.LoadMoreMedias(@Model.Id, @pageSize, 'list-medias')" class="btn btn-info trigger_load">Load older medias</button>
                            }
                        </div>

                    </div>
                    <!-- END Files -->

                </div>

            </div>
        </div>
    </section>
    <!-- ./content -->

</div>
@if (Model.StartedBy.Id == currentUser.Id || currentUser.DomainAdministrators.Any(x => x.Id == @currentDomainId))
{
    @Html.Partial("_ModalLink", Model);
    //Html.RenderAction("GenerateModalTask", "Qbicles", new { taskId = Model.Id });
    Html.RenderAction("GenerateModalMedia", "Qbicles");
}
<!-- /.content-wrapper -->
