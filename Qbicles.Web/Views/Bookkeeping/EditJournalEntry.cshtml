@using Qbicles.Models.Bookkeeping;
@using Qbicles.BusinessRules;
@using Qbicles.Models;
@model JournalEntry
@{
    var formatDate = (string)ViewBag.CurrentDateFormat;
    var dateTimeFormat = (string)ViewBag.CurrentDateTimeFormat;
    var dateFormat = (string)ViewBag.CurrentDateFormat;
    var timeZone = (string)ViewBag.CurrentTimeZone;
    var journalGroups = (List<JournalGroup>)ViewBag.JournalGroups;
    var dimensions = (List<TransactionDimension>)ViewBag.Dimensions;
    //comment/ media
    var currentUserId = (string)ViewBag.CurrentUserId;
    char decimalSymbol = Convert.ToChar(System.Threading.Thread.CurrentThread.CurrentCulture.NumberFormat.NumberDecimalSeparator);

    var bkWorkGroups = (List<BKWorkGroup>)ViewBag.BkWorkGroups;

    ViewBag.Title = "Edit JournalEntry";
    var api = (string)ViewBag.DocRetrievalUrl;
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper qbicle-detail">


    <!-- Main content -->
    <section class="content">

        <input hidden="" id="journal-posted-date-select" value="@Model.PostedDate.ConvertTimeFromUtc(timeZone).FormatDateTimeByUser(dateTimeFormat)" />
        <input hidden="" id="closed-book-date" value="@ViewBag.CloseBookDate" />
        <br /><br />

        <div class="mod_title">
            <h5>Bookkeeping</h5>
            <h4>Edit Journal Entry #@(Model.Number)</h4>
        </div>


        <div class="row">
            <div class="col-xs-12">
                <div class="app_filter">
                    <div class="row">
                        <div class="col-xs-12 col-sm-6 col-lg-9">
                            <a href="javascript:history.go(-1);" class="btn btn-danger"><i class="fa fa-angle-left"></i> &nbsp; Cancel</a>
                            <a href="javascript:void(0)" onclick="ShowApprovalPage('@(Model.Approval?.Key??"")', false, 'journal')" class="btn btn-primary"><i class="fa fa-external-link"></i> &nbsp; View in Qbicles</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <br />

        <div class="activity-overview alert-detail" style="display: inline-block;">
            <p style="margin: 0; padding: 0;">
                <strong>NOTE:</strong> Journal entries require review and approval by administrators before they are added to the Chart of Accounts.
                You will be notified when your submission is complete.
            </p>
        </div>

        <br /><br />


        <form name="new-journal-entry" id="new-journal-entry">
            <div class="row">

                <input type="hidden" id="journalEntryId" value="@Model.Id" />

                <div class="col-xs-12 col-sm-4">
                    <div class="activity-overview generic" style="padding: 20px;">
                        <div class="form-group" style="margin: 0;">
                            <label for="workgroup">Assign a Workgroup to this Journal Entry</label>
                            <select required="" id="bk-worgroup-select" class="form-control select2" style="width: 100%;" onchange="ChangeBKWorkgroup()">
                                <option value="" selected=""></option>
                                @foreach (var wg in bkWorkGroups)
                                {
                                    if (wg.Id == (Model.WorkGroup?.Id ?? 0))
                                    {
                                        <option selected="" value="@wg.Id">@wg.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@wg.Id">@wg.Name</option>
                                    }
                                }

                            </select>
                        </div>

                    </div>

                    <div class="preview-workgroup" style="display: @(Model.WorkGroup == null?"none":"");">
                        <br />
                        <table class="table app_specific" style="margin: 0;">
                            <tr>
                                <td><h5>Process</h5></td>
                                <td class="workgroup_process">
                                    @{
                                        var p = Model.WorkGroup?.Processes.Select(n => n.Name);
                                        var process = p == null ? "" : string.Join(",", p);
                                    }
                                    @process
                                </td>
                            </tr>
                            <tr>
                                <td><h5>Qbicle</h5></td>
                                <td class="workgroup_qbicle">@(Model.WorkGroup?.Qbicle.Name)</td>
                            </tr>
                            <tr>
                                <td><h5>Members</h5></td>
                                <td class="workgroup_member">@(Model.WorkGroup?.Members.Count)</td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="col-xs-12 col-sm-8">
                    <div class="activity-overview task" style="padding-top: 30px; margin-bottom: 40px;">
                        <div class="row">
                            <div class="col-xs-12 col-sm-6">
                                <div class="form-group">
                                    <label for="date">Journal date <span class="required">*</span></label>
                                    <input style="background-color:#ffffff !important" readonly="" required="" type="text" name="date" id="journalEntry_PostedDate" value="@Model.PostedDate.ConvertTimeFromUtc(timeZone).FormatDateTimeByUser(dateTimeFormat)" class="form-control">
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6">
                                <div class="form-group">
                                    <label for="journal_group">Journal Group <span class="required">*</span></label>
                                    <select name="journal_group" id="journalEntry_Group" class="form-control chosen-select" style="width: 100%">
                                        @foreach (var item in journalGroups)
                                        {
                                            if (Model.Group != null && item.Id == Model.Group.Id)
                                            {
                                                <option selected value="@item.Id">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.Id">@item.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-12">
                                <div class="form-group">
                                    <label for="number">Journal description <span class="required">*</span></label>
                                    <textarea required name="description" id="journalEntry_desciption" class="form-control">@Model.Description</textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



            <h5>Transactions</h5>
            <table id="transaction_table" class="datatable table app_specific journal-transactions" style="width: 100%;" data-paging="false" data-info="false" data-searching="false" data-ordering="false">
                <thead>
                    <tr>
                        <th data-priority="1" style="width: 50px;">#</th>
                        <th data-priority="1">Account</th>
                        <th data-priority="1" style="width: 150px;">Date</th>
                        <th data-priority="1" style="width: 150px;">Reference</th>
                        <th data-priority="2" style="width: 90px;">Debit</th>
                        <th data-priority="2" style="width: 90px;">Credit</th>
                        <th data-priority="4">Memo</th>
                        <th data-priority="3" style="width: 250px;">Reporting Filter</th>
                        <th data-priority="1" style="width: 85px;"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.BKTransactions != null && Model.BKTransactions.Count > 0)
                    {
                        for (int i = 0; i < Model.BKTransactions.Count; i++)
                        {
                            if (Model.BKTransactions[i].Parent != null)
                            {
                                @Html.Partial("_TransactionRowPartial", Model.BKTransactions[i], new ViewDataDictionary {
                                    { "dimensions", dimensions }, {"CurrentDateTimeFormat", dateTimeFormat}, {"CurrentTimeZone", timeZone}, { "index", (i + 1) }, { "SelectedTaxRate" , "isSelectedTaxRate"
                                } });
                            }
                            else
                            {
                                @Html.Partial("_TransactionRowPartial", Model.BKTransactions[i], new ViewDataDictionary
                                {
                                    { "dimensions", dimensions }, {"CurrentDateTimeFormat", dateTimeFormat}, {"CurrentTimeZone", timeZone}, { "index", (i + 1) }
                                });
                            }

                        }
                    }
                </tbody>
                <tfoot class="hidden-xs">
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th class="text-right">Total:</th>
                        <th class="text-right"><span class="sumDedit">0</span></th>
                        <th class="text-right"><span class="sumCredit">0</span></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>


            @if (Model.BKTransactions != null && Model.BKTransactions.Count > 0)
            {
                for (int i = 0; i < Model.BKTransactions.Count; i++)
                {
                    @Html.Partial("_AttachmentViewPartial", Model.BKTransactions[i], new ViewDataDictionary { { "index", (i + 1) } });
                }
            }
        </form>



        <div class="well visible-xs">
            <div class="row">
                <div class="col-xs-6">
                    <p><strong>Total debits</strong></p>
                    <span class="sumDedit">0</span>
                </div>
                <div class="col-xs-6">
                    <p><strong>Total credits</strong></p>
                    <span class="sumCredit">0</span>
                </div>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-xs-6">
                <button class="btn btn-info" onclick="AddNewBkTransactionRow()"><i class="fa fa-plus"></i> &nbsp; Add row</button>
                @if (Model.BKTransactions != null && Model.BKTransactions.Count > 2)
                {
                    <button class="btn btn-danger" id="clearAll" onclick="DeleteAllBkTransactionRows()"><i class="fa fa-trash"></i> &nbsp; Clear all</button>
                }
                else
                {
                    <button class="btn btn-danger" id="clearAll" disabled onclick="DeleteAllBkTransactionRows()"><i class="fa fa-trash"></i> &nbsp; Clear all</button>
                }

            </div>
            <div class="col-xs-6 text-right">
                <button class="btn btn-success submitforreview" data-toggle="modal" onclick="SubmitJournalEntryToReview()"><i class="fa fa-lock"></i> &nbsp; Submit for review</button>
            </div>
        </div>
        <br />
        <div class="app_topnav entity_adds" style="background: #fff; padding: 0;">
            <ul class="nav nav-pills app_main_nav">
                <li role="presentation" class="active">
                    <a href="#tab1" data-toggle="tab">
                        <i class="fa fa-comments"></i>
                        Comments
                    </a>
                </li>
                <li role="presentation">
                    <a href="#tab2" data-toggle="tab">
                        <i class="fa fa-folder-open"></i>
                        Files
                    </a>
                </li>
            </ul>
        </div>
        <br />
        <div class="row">
            <div class="col-xs-12">
                <div class="tab-content">
                    <div class="tab-pane fade in active" id="tab1">
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="well" style="max-width: 800px;">
                                    <div class="form-group">
                                        <label for="add-comment">Add a comment</label>
                                        <textarea id="txt-comment-task" name="add-comment" class="form-control"></textarea>
                                    </div>
                                    <button onclick="AddCommentJournalEntry(@Model.Id)" class="btn btn-success">Submit</button>
                                </div>
                                <br />
                            </div>
                        </div>
                        <div id="list-comments-journal">
                            @foreach (var post in Model.Posts.OrderByDescending(x => x.StartedDate).Take(HelperClass.activitiesPageSize))
                            {
                                <!-- General post -->
                                var fullName = post.CreatedBy.Id == currentUserId ? "Me" : HelperClass.GetFullNameOfUser(post.CreatedBy);
                                <article id="post-@post.Id" class="activity post">
                                    <img style="background-image: url('@api@post.CreatedBy.ProfilePic')" class="activity-avatar" />
                                    <div class="activity-detail">
                                        <div class="activity-meta">
                                            <h4>@fullName</h4>
                                            <small>@post.StartedDate.ConvertTimeFromUtc(timeZone).ToString(dateFormat + ", hh:mmtt")</small>
                                        </div>
                                        <div class="activity-overview media-comment">
                                            <p>@post.Message</p>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </article>
                                <!-- END General post -->
                            }
                        </div>
                        @if (Model.Posts.Count() > HelperClass.activitiesPageSize)
                        {
                            <button class="btn btn-info" id="btn-load-more-comment" onclick="LoadMoreCommentJournalEntry()">Load older posts</button>
                        }
                    </div>

                    <div class="tab-pane fade" id="tab2">

                        <br />
                        <br />
                        <a href="#" class="btn btn-success" id="btnAddFile" data-toggle="modal" data-target="#create-media"><i class="fa fa-upload"></i> &nbsp; Upload a file</a>

                        <br /><br />
                        <div id="list-medias">
                            @if (Model.AssociatedFiles.Count > 0)
                            {
                                foreach (var item in Model.AssociatedFiles.OrderByDescending(x => x.Id).Take(HelperClass.activitiesPageSize))
                                {
                                    var media = (QbicleMedia)item;
                                    var createdByName = media.StartedBy.Id == currentUserId ? "Me" : HelperClass.GetFullNameOfUser(media.StartedBy);
                                    var createdDate = media.StartedDate.Date == DateTime.UtcNow.Date ? "Today, " + media.StartedDate.ToString("hh:mmtt").ToLower() : media.StartedDate.ToString(dateFormat + " hh:mmtt").ToLower();
                                    var mediaLastupdate = media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault();
                                    var lastUpdateFile = "";
                                    if (mediaLastupdate != null)
                                    {
                                        lastUpdateFile = mediaLastupdate.UploadedDate.Date == DateTime.UtcNow.Date ? "Today, " + mediaLastupdate.UploadedDate.ToString("hh:mmtt").ToLower() : mediaLastupdate.UploadedDate.ToString(dateFormat + " hh:mmtt").ToLower();
                                    }//Media post
                                    <article class="activity media">
                                        <img style="background-image: url('@api@media.StartedBy.ProfilePic')" class="activity-avatar" />
                                        <div class="activity-detail">
                                            <div class="activity-meta">
                                                <h4>@createdByName</h4>
                                                <small>@createdDate</small>
                                                <br class="visible-xs">
                                            </div>
                                            <div class="activity-overview media">
                                                <div class="row">
                                                    <div class="col-xs-12 col-sm-5 col-md-6 col-lg-5">
                                                        <a href="javascript:void(0)" onclick="ShowMediaPage('@media.Key')">
                                                            @if (media.FileType.Type == "Image File")
                                                            {
                                                                <img id="media-@item.Id" class="img-responsive" src='@api@mediaLastupdate.Uri' />
                                                            }
                                                            else
                                                            {
                                                                <img src="@media.FileType.IconPath" class="img-responsive">
                                                            }
                                                        </a>
                                                    </div>
                                                    <div class="col-xs-12 col-sm-7 col-md-6 col-lg-7 description">
                                                        <h5>@media.Name</h5>
                                                        <p>
                                                            @media.Description
                                                        </p>
                                                        <small>@media.FileType.Type | Update @lastUpdateFile</small>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </article>
                                    <!-- END Media post -->
                                }
                            }
                        </div>
                        @if (Model.AssociatedFiles.Count() > HelperClass.activitiesPageSize)
                        {
                            <button class="btn btn-info" id="btn-load-more-media" onclick="LoadMoreMediaJournalEntry()">Load older medias</button>
                        }
                    </div>
                </div>
            </div>
        </div>

    </section>
    <!-- ./content -->
</div>
<!-- /.content-wrapper -->
<div class="modal fade left" id="app-bookkeeping-treeview" role="dialog" aria-labelledby="app-bookkeeping-treeview">
    @{ Html.RenderAction("TreeViewAccountPartial", "Bookkeeping");}
</div>
<!-- TreeView/.modal -->
<div class="modal fade" id="submit-for-review" role="dialog" aria-labelledby="submit-for-review">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title">Send to Review</h5>
            </div>
            <div class="modal-body submit-for-review">
                <table class="table app_specific valigntop">
                    <thead>
                        <tr>
                            <th>Approval process</th>
                            <th>Associated Qbicle</th>
                            <th>Reviewers</th>
                            <th>Approvers</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @if (Model.WorkGroup != null)
                            {
                                <td>
                                    @foreach (var item in Model.WorkGroup.Processes)
                                    {
                                        <li>@item.Name</li>
                                    }
                                </td>
                                <td>@(Model.WorkGroup?.Qbicle?.Name)</td>
                                <td>
                                    <ul>
                                        @{foreach (var item in Model.WorkGroup.Reviewers)
                                            {
                                                <li>@HelperClass.GetFullNameOfUser(item)</li>
                                            }}

                                    </ul>
                                </td>
                                <td>
                                    <ul>
                                        @{foreach (var item in Model.WorkGroup.Approvers)
                                            {
                                                <li>@HelperClass.GetFullNameOfUser(item)</li>
                                            }}

                                    </ul>
                                </td>
                            }

                        </tr>
                    </tbody>
                </table>

                <button onclick="SendJournalEntryToReview()" class="btn btn-success"><i class="fa fa-check"></i> &nbsp; Send to review</button>
                <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-remove"></i> &nbsp; Cancel</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- Submit for review /.modal -->

@{
    <script src="~/Scripts/dev/bookkeeping-journalentry.js"></script>
    <script src="~/Scripts/dev/bookkeeping-journalentrypostmedia.js"></script>
    <script src="~/Scripts/dev/trader.domain.js"></script>
    @*if (System.Diagnostics.Debugger.IsAttached)
        {
            <script src="~/Scripts/dev/bookkeeping-journalentry.js"></script>
            <script src="~/Scripts/dev/bookkeeping-journalentrypostmedia.js"></script>
            <script src="~/Scripts/dev/trader.domain.js"></script>
        }
        else
        {
            <script src="~/Scripts/dev/bookkeeping-journalentry.min.js"></script>
            <script src="~/Scripts/dev/bookkeeping-journalentrypostmedia.min.js"></script>
            <script src="~/Scripts/dev/trader.domain.min.js">
            </script>
        }*@
}

<script>
    var minDate = new Date(Date.parse($("#closed-book-date").val()));
    minDate.setDate(minDate.getDate() + 1);
    $('#journalEntry_PostedDate').daterangepicker({
        singleDatePicker: true,
        minDate: new Date(Date.parse(minDate)),
        timePicker: true,
        //autoApply: true,
        showDropdowns: true,
        autoUpdateInput: true,
        cancelClass: "btn-danger",
        opens: "left",
        locale: {
            cancelLabel: 'Clear',
            format: getDateTimeFormat()
        }
    }).on('apply.daterangepicker',
        function (e, picker) {
            var postedDate = picker.startDate.format(getDateTimeFormat());
            $("#journal-posted-date-select").val(postedDate);
            VerifyJournalPostedDate(postedDate,1);
        }).on('cancel.daterangepicker', function (ev, picker) {
       // $(this).val(new Date());
    });
    var postDisplayedCount = 0;
    var listPosts = @Html.Raw( Json.Encode(Model.Posts.OrderByDescending(x => x.StartedDate)
            .Skip(HelperClass.activitiesPageSize)
            .Select( x=> new {
                Id = x.Id, Message = x.Message, ProfilePic= x.CreatedBy.ProfilePic,
                FullName = HelperClass.GetFullNameOfUser(x.CreatedBy),
                CreatedDate = x.StartedDate.ToString(dateFormat + ", hh:mmtt")  })
                .ToList()));

    function LoadMoreCommentJournalEntry() {
        var nextPage =  listPosts.slice(postDisplayedCount, postDisplayedCount + @HelperClass.activitiesPageSize);
        var html = genarateRowsForAtivityDetail(nextPage);
        $('#list-comments-journal').append(html);
        postDisplayedCount= postDisplayedCount + @HelperClass.activitiesPageSize;
        if(listPosts.length < postDisplayedCount){
            $('#btn-load-more-comment').hide();
        }
    };

    var mediaDisplayedCount = 0;
    var listMedias = @Html.Raw( Json.Encode(Model.AssociatedFiles.OrderByDescending(x => x.StartedDate).Skip(HelperClass.activitiesPageSize).Select(m => (QbicleMedia)m).Select( media=> new {
        CreatedByName = media.StartedBy.Id == currentUserId ? "Me" : HelperClass.GetFullNameOfUser(media.StartedBy),
        CreatedAvatar = media.StartedBy.ProfilePic,
        Id = media.Id,
        ImgPath = media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault()?.Uri,
        Name = media.Name,
        Type = media.FileType.Type,
        Description = media.Description,
        CreatedDate = media.StartedDate.Date == DateTime.UtcNow.Date ? "Today, " + media.StartedDate.ToString("hh:mmtt").ToLower() : media.StartedDate.ToString(dateFormat + " hh:mmtt").ToLower(),
        LastUpdate = media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault()?.UploadedDate.Date == DateTime.UtcNow.Date ? "Today, " + media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault()?.UploadedDate.ToString("hh:mmtt").ToLower() : media.VersionedFiles.Where(e => !e.IsDeleted).OrderByDescending(x => x.UploadedDate).FirstOrDefault()?.UploadedDate.ToString(dateFormat + " hh:mmtt").ToLower()
    }).ToList()));

    function LoadMoreMediaJournalEntry(){
        var nextPage =  listMedias.slice(mediaDisplayedCount, mediaDisplayedCount + @HelperClass.activitiesPageSize);
        nextPage.forEach(function(media) {
            generateMediaForActivityPage(media, true);
        });
        mediaDisplayedCount= mediaDisplayedCount + @HelperClass.activitiesPageSize;
        if(listMedias.length < mediaDisplayedCount){
            $('#btn-load-more-media').hide();
        }
    }
    CheckDeleteAllBkTransations();
</script>
@if (decimalSymbol.ToString() == ",")
{
    <script>

        charDot = ",";
    </script>
}
else if (decimalSymbol.ToString() == ".")
{
    <script>
        charDot = ".";
    </script>
}

